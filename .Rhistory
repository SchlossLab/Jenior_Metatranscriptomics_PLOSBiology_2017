'GfC3M1','GfC3M2','GfC3M3',
'GfC4M1','GfC4M2','GfC4M3',
'GfC5M1','GfC5M2','GfC5M3',
'GfC6M1','GfC6M2','GfC6M3')] # Germfree
rownames(metabolome) <- metabolome$BIOCHEMICAL
metabolome$BIOCHEMICAL <- NULL
metabolome$PUBCHEM <- NULL
metabolome$KEGG <- NULL
metabolome$SUB_PATHWAY <- NULL
metabolome$SUPER_PATHWAY <- NULL
metabolome <- as.data.frame(t(metabolome))
#-------------------------------------------------------------------------------------------------------------------------#
# Separate groups
metabolome <- clean_merge(metadata, metabolome)
abx_metabolome <- subset(metabolome, abx != 'none')
abx_metabolome$infection <- NULL
abx_metabolome$susceptibility <- NULL
abx_metabolome$abx <- factor(abx_metabolome$abx)
cef_metabolome <- subset(metabolome, abx == 'cefoperazone')
cef_metabolome$abx <- NULL
cef_metabolome$susceptibility <- NULL
cef_metabolome$infection <- factor(cef_metabolome$infection)
clinda_metabolome <- subset(metabolome, abx == 'clindamycin')
clinda_metabolome$abx <- NULL
clinda_metabolome$susceptibility <- NULL
clinda_metabolome$infection <- factor(clinda_metabolome$infection)
strep_metabolome <- subset(metabolome, abx == 'streptomycin')
strep_metabolome$abx <- NULL
strep_metabolome$susceptibility <- NULL
strep_metabolome$infection <- factor(strep_metabolome$infection)
metabolome$infection <- NULL
metabolome$abx <- NULL
metabolome$abx <- factor(metabolome$susceptibility)
rm(metadata)
# Random Forest feature selection
all_rf <- featureselect_RF(metabolome, 'susceptibility')
abx_rf <- featureselect_RF(abx_metabolome, 'abx')
cef_rf <- featureselect_RF(cef_metabolome, 'infection')
clinda_rf <- featureselect_RF(clinda_metabolome, 'infection')
strep_rf <- featureselect_RF(strep_metabolome, 'infection')
all_rf$feature <- gsub('_', ' ', all_rf$feature)
abx_rf$feature <- gsub('_', ' ', abx_rf$feature)
cef_rf$feature <- gsub('_', ' ', cef_rf$feature)
clinda_rf$feature <- gsub('_', ' ', clinda_rf$feature)
strep_rf$feature <- gsub('_', ' ', strep_rf$feature)
# Sort and subset top hits
all_rf <- all_rf[order(-all_rf$final_features_RF),]
all_rf <- all_rf[order(all_rf$final_features_RF),]
abx_rf <- abx_rf[order(-abx_rf$final_features_RF),]
abx_rf <- abx_rf[order(abx_rf$final_features_RF),]
cef_rf <- cef_rf[order(-cef_rf$final_features_RF),]
cef_rf <- cef_rf[order(cef_rf$final_features_RF),]
clinda_rf <- clinda_rf[order(-clinda_rf$final_features_RF),]
clinda_rf <- clinda_rf[order(clinda_rf$final_features_RF),]
strep_rf <- strep_rf[order(-strep_rf$final_features_RF),]
strep_rf <- strep_rf[order(strep_rf$final_features_RF),]
# Subset concentrations
metabolome <- metabolome[, c(1, which(colnames(metabolome) %in% all_rf$feature))]
res_metabolome <- subset(metabolome, susceptibility == 'resistant')
res_metabolome$susceptibility <- NULL
sus_metabolome <- subset(metabolome, susceptibility == 'susceptible')
sus_metabolome$susceptibility <- NULL
abx_metabolome <- abx_metabolome[, c(1, which(colnames(abx_metabolome) %in% abx_rf$feature))]
cef_abx_metabolome <- subset(abx_metabolome, abx == 'cefoperazone')
cef_abx_metabolome$abx <- NULL
clinda_abx_metabolome <- subset(abx_metabolome, abx == 'clindamycin')
clinda_abx_metabolome$abx <- NULL
strep_abx_metabolome <- subset(abx_metabolome, abx == 'streptomycin')
strep_abx_metabolome$abx <- NULL
cef_metabolome <- cef_metabolome[, c(1, which(colnames(cef_metabolome) %in% cef_rf$feature))]
inf_cef_metabolome <- subset(cef_metabolome, infection == '630')
inf_cef_metabolome$infection<- NULL
mock_cef_metabolome <- subset(cef_metabolome, infection == 'mock')
mock_cef_metabolome$infection<- NULL
clinda_metabolome <- clinda_metabolome[, c(1, which(colnames(clinda_metabolome) %in% clinda_rf$feature))]
inf_clinda_metabolome <- subset(clinda_metabolome, infection == '630')
inf_clinda_metabolome$infection<- NULL
mock_clinda_metabolome <- subset(clinda_metabolome, infection == 'mock')
mock_clinda_metabolome$infection<- NULL
strep_metabolome <- strep_metabolome[, c(1, which(colnames(strep_metabolome) %in% strep_rf$feature))]
inf_strep_metabolome <- subset(strep_metabolome, infection == '630')
inf_strep_metabolome$infection<- NULL
mock_strep_metabolome <- subset(strep_metabolome, infection == 'mock')
mock_strep_metabolome$infection<- NULL
rm(all_rf,abx_rf,cef_rf,clinda_rf,strep_rf,
metabolome,abx_metabolome,clinda_metabolome,strep_metabolome)
# Find significant differences
resistant_pvalues <- c()
for (i in 1:ncol(res_metabolome)){resistant_pvalues[i] <- wilcox.test(res_metabolome[,i], sus_metabolome[,i], exact=FALSE)$p.value}
resistant_pvalues <- p.adjust(pvalues, method='BH')
abx_pvalues1 <- c()
for (i in 1:ncol(cef_abx_metabolome)){abx_pvalues1[i] <- wilcox.test(cef_abx_metabolome[,i], clinda_abx_metabolome[,i], exact=FALSE)$p.value}
abx_pvalues2 <- c()
for (i in 1:ncol(cef_abx_metabolome)){abx_pvalues2[i] <- wilcox.test(cef_abx_metabolome[,i], strep_abx_metabolome[,i], exact=FALSE)$p.value}
abx_pvalues3 <- c()
for (i in 1:ncol(clinda_abx_metabolome)){abx_pvalues3[i] <- wilcox.test(clinda_abx_metabolome[,i], strep_abx_metabolome[,i], exact=FALSE)$p.value}
abx_pvalues <- c(abx_pvalues1, abx_pvalues2, abx_pvalues3)
abx_pvalues <- p.adjust(abx_pvalues, method='BH')
abx_pvalues1 <- abx_pvalues[1:17]
abx_pvalues2 <- abx_pvalues[18:34]
abx_pvalues3 <- abx_pvalues[35:51]
rm(abx_pvalues)
cef_pvalues <- c()
for (i in 1:ncol(inf_cef_metabolome)){cef_pvalues[i] <- wilcox.test(inf_cef_metabolome[,i], mock_cef_metabolome[,i], exact=FALSE)$p.value}
cef_pvalues <- p.adjust(cef_pvalues, method='BH')
clinda_pvalues <- c()
for (i in 1:ncol(inf_clinda_metabolome)){clinda_pvalues[i] <- wilcox.test(inf_clinda_metabolome[,i], mock_clinda_metabolome[,i], exact=FALSE)$p.value}
pvalues <- p.adjust(clinda_pvalues, method='BH')
strep_pvalues <- c()
for (i in 1:ncol(inf_strep_metabolome)){strep_pvalues[i] <- wilcox.test(inf_strep_metabolome[,i], mock_strep_metabolome[,i], exact=FALSE)$p.value}
strep_pvalues <- p.adjust(strep_pvalues, method='BH')
# Set up environment
rm(list=ls())
gc()
# Load in functions
starting_dir <- getwd()
source('~/Desktop/Repositories/Jenior_Metatranscriptomics_2016/code/R/functions.R')
# Output plot name
plot_file <- 'results/figures/figure_S5.pdf'
# Input Metabolomes
metabolome_file <- 'data/metabolome/scaled_intensities.log10.tsv'
# Input Metadata
metadata_file <- 'data/metadata.tsv'
#----------------#
# Read in data
# Metabolomes
metabolome <- read.delim(metabolome_file, sep='\t', header=TRUE)
rm(metabolome_file)
# Metadata
metadata <- read.delim(metadata_file, sep='\t', header=T, row.names=1)
rm(metadata_file)
#-------------------------------------------------------------------------------------------------------------------------#
# Format data
# Metadata
metadata$type <- NULL
metadata$cage <- NULL
metadata$mouse <- NULL
metadata$gender <- NULL
# Metabolomes
metabolome <- metabolome[,!colnames(metabolome) %in% c('GfC1M1','GfC1M2','GfC1M3',
'GfC2M1','GfC2M2','GfC2M3',
'GfC3M1','GfC3M2','GfC3M3',
'GfC4M1','GfC4M2','GfC4M3',
'GfC5M1','GfC5M2','GfC5M3',
'GfC6M1','GfC6M2','GfC6M3')] # Germfree
rownames(metabolome) <- metabolome$BIOCHEMICAL
metabolome$BIOCHEMICAL <- NULL
metabolome$PUBCHEM <- NULL
metabolome$KEGG <- NULL
metabolome$SUB_PATHWAY <- NULL
metabolome$SUPER_PATHWAY <- NULL
metabolome <- as.data.frame(t(metabolome))
#-------------------------------------------------------------------------------------------------------------------------#
# Separate groups
metabolome <- clean_merge(metadata, metabolome)
abx_metabolome <- subset(metabolome, abx != 'none')
abx_metabolome$infection <- NULL
abx_metabolome$susceptibility <- NULL
abx_metabolome$abx <- factor(abx_metabolome$abx)
cef_metabolome <- subset(metabolome, abx == 'cefoperazone')
cef_metabolome$abx <- NULL
cef_metabolome$susceptibility <- NULL
cef_metabolome$infection <- factor(cef_metabolome$infection)
clinda_metabolome <- subset(metabolome, abx == 'clindamycin')
clinda_metabolome$abx <- NULL
clinda_metabolome$susceptibility <- NULL
clinda_metabolome$infection <- factor(clinda_metabolome$infection)
strep_metabolome <- subset(metabolome, abx == 'streptomycin')
strep_metabolome$abx <- NULL
strep_metabolome$susceptibility <- NULL
strep_metabolome$infection <- factor(strep_metabolome$infection)
metabolome$infection <- NULL
metabolome$abx <- NULL
metabolome$abx <- factor(metabolome$susceptibility)
rm(metadata)
# Random Forest feature selection
all_rf <- featureselect_RF(metabolome, 'susceptibility')
abx_rf <- featureselect_RF(abx_metabolome, 'abx')
cef_rf <- featureselect_RF(cef_metabolome, 'infection')
clinda_rf <- featureselect_RF(clinda_metabolome, 'infection')
strep_rf <- featureselect_RF(strep_metabolome, 'infection')
all_rf$feature <- gsub('_', ' ', all_rf$feature)
abx_rf$feature <- gsub('_', ' ', abx_rf$feature)
cef_rf$feature <- gsub('_', ' ', cef_rf$feature)
clinda_rf$feature <- gsub('_', ' ', clinda_rf$feature)
strep_rf$feature <- gsub('_', ' ', strep_rf$feature)
# Sort and subset top hits
all_rf <- all_rf[order(-all_rf$final_features_RF),][1:20,]
all_rf <- all_rf[order(all_rf$final_features_RF),]
abx_rf <- abx_rf[order(-abx_rf$final_features_RF),][1:20,]
abx_rf <- abx_rf[order(abx_rf$final_features_RF),]
cef_rf <- cef_rf[order(-cef_rf$final_features_RF),][1:10,]
cef_rf <- cef_rf[order(cef_rf$final_features_RF),]
clinda_rf <- clinda_rf[order(-clinda_rf$final_features_RF),][1:10,]
clinda_rf <- clinda_rf[order(clinda_rf$final_features_RF),]
strep_rf <- strep_rf[order(-strep_rf$final_features_RF),][1:10,]
strep_rf <- strep_rf[order(strep_rf$final_features_RF),]
# Subset concentrations
metabolome <- metabolome[, c(1, which(colnames(metabolome) %in% all_rf$feature))]
res_metabolome <- subset(metabolome, susceptibility == 'resistant')
res_metabolome$susceptibility <- NULL
sus_metabolome <- subset(metabolome, susceptibility == 'susceptible')
sus_metabolome$susceptibility <- NULL
abx_metabolome <- abx_metabolome[, c(1, which(colnames(abx_metabolome) %in% abx_rf$feature))]
cef_abx_metabolome <- subset(abx_metabolome, abx == 'cefoperazone')
cef_abx_metabolome$abx <- NULL
clinda_abx_metabolome <- subset(abx_metabolome, abx == 'clindamycin')
clinda_abx_metabolome$abx <- NULL
strep_abx_metabolome <- subset(abx_metabolome, abx == 'streptomycin')
strep_abx_metabolome$abx <- NULL
cef_metabolome <- cef_metabolome[, c(1, which(colnames(cef_metabolome) %in% cef_rf$feature))]
inf_cef_metabolome <- subset(cef_metabolome, infection == '630')
inf_cef_metabolome$infection<- NULL
mock_cef_metabolome <- subset(cef_metabolome, infection == 'mock')
mock_cef_metabolome$infection<- NULL
clinda_metabolome <- clinda_metabolome[, c(1, which(colnames(clinda_metabolome) %in% clinda_rf$feature))]
inf_clinda_metabolome <- subset(clinda_metabolome, infection == '630')
inf_clinda_metabolome$infection<- NULL
mock_clinda_metabolome <- subset(clinda_metabolome, infection == 'mock')
mock_clinda_metabolome$infection<- NULL
strep_metabolome <- strep_metabolome[, c(1, which(colnames(strep_metabolome) %in% strep_rf$feature))]
inf_strep_metabolome <- subset(strep_metabolome, infection == '630')
inf_strep_metabolome$infection<- NULL
mock_strep_metabolome <- subset(strep_metabolome, infection == 'mock')
mock_strep_metabolome$infection<- NULL
rm(all_rf,abx_rf,cef_rf,clinda_rf,strep_rf,
metabolome,abx_metabolome,clinda_metabolome,strep_metabolome)
# Find significant differences
resistant_pvalues <- c()
for (i in 1:ncol(res_metabolome)){resistant_pvalues[i] <- wilcox.test(res_metabolome[,i], sus_metabolome[,i], exact=FALSE)$p.value}
resistant_pvalues <- p.adjust(pvalues, method='BH')
abx_pvalues1 <- c()
for (i in 1:ncol(cef_abx_metabolome)){abx_pvalues1[i] <- wilcox.test(cef_abx_metabolome[,i], clinda_abx_metabolome[,i], exact=FALSE)$p.value}
abx_pvalues2 <- c()
for (i in 1:ncol(cef_abx_metabolome)){abx_pvalues2[i] <- wilcox.test(cef_abx_metabolome[,i], strep_abx_metabolome[,i], exact=FALSE)$p.value}
abx_pvalues3 <- c()
for (i in 1:ncol(clinda_abx_metabolome)){abx_pvalues3[i] <- wilcox.test(clinda_abx_metabolome[,i], strep_abx_metabolome[,i], exact=FALSE)$p.value}
abx_pvalues <- c(abx_pvalues1, abx_pvalues2, abx_pvalues3)
abx_pvalues <- p.adjust(abx_pvalues, method='BH')
abx_pvalues1 <- abx_pvalues[1:17]
abx_pvalues2 <- abx_pvalues[18:34]
abx_pvalues3 <- abx_pvalues[35:51]
rm(abx_pvalues)
cef_pvalues <- c()
for (i in 1:ncol(inf_cef_metabolome)){cef_pvalues[i] <- wilcox.test(inf_cef_metabolome[,i], mock_cef_metabolome[,i], exact=FALSE)$p.value}
cef_pvalues <- p.adjust(cef_pvalues, method='BH')
clinda_pvalues <- c()
for (i in 1:ncol(inf_clinda_metabolome)){clinda_pvalues[i] <- wilcox.test(inf_clinda_metabolome[,i], mock_clinda_metabolome[,i], exact=FALSE)$p.value}
pvalues <- p.adjust(clinda_pvalues, method='BH')
strep_pvalues <- c()
for (i in 1:ncol(inf_strep_metabolome)){strep_pvalues[i] <- wilcox.test(inf_strep_metabolome[,i], mock_strep_metabolome[,i], exact=FALSE)$p.value}
strep_pvalues <- p.adjust(strep_pvalues, method='BH')
View(mock_clinda_metabolome)
# Set up environment
rm(list=ls())
gc()
# Load in functions
starting_dir <- getwd()
source('~/Desktop/Repositories/Jenior_Metatranscriptomics_2016/code/R/functions.R')
# Output plot name
plot_file <- 'results/figures/figure_4.pdf'
# Input Metabolomes
metabolome_file <- 'data/metabolome/scaled_intensities.log10.tsv'
# Input Metadata
metadata_file <- 'data/metadata.tsv'
#----------------#
# Read in data
# Metabolomes
metabolome <- read.delim(metabolome_file, sep='\t', header=TRUE)
rm(metabolome_file)
# Metadata
metadata <- read.delim(metadata_file, sep='\t', header=T, row.names=1)
rm(metadata_file)
#-------------------------------------------------------------------------------------------------------------------------#
# Format data
# Metadata
metadata$type <- NULL
metadata$cage <- NULL
metadata$mouse <- NULL
metadata$gender <- NULL
# Metabolomes
metabolome <- metabolome[,!colnames(metabolome) %in% c('GfC1M1','GfC1M2','GfC1M3',
'GfC2M1','GfC2M2','GfC2M3',
'GfC3M1','GfC3M2','GfC3M3',
'GfC4M1','GfC4M2','GfC4M3',
'GfC5M1','GfC5M2','GfC5M3',
'GfC6M1','GfC6M2','GfC6M3')] # Germfree
rownames(metabolome) <- metabolome$BIOCHEMICAL
metabolome$BIOCHEMICAL <- NULL
metabolome_annotation <- metabolome[,1:4]
metabolome$PUBCHEM <- NULL
metabolome$KEGG <- NULL
metabolome$SUB_PATHWAY <- NULL
metabolome$SUPER_PATHWAY <- NULL
metabolome <- as.data.frame(t(metabolome))
#-------------------------------------------------------------------------------------------------------------------------#
# Stats
# Prep data
metabolome_rf <- clean_merge(metadata, metabolome)
abx_rf <- subset(metabolome_rf, abx != 'none')
abx_rf$infection <- NULL
abx_rf$susceptibility <- NULL
cef_rf <- subset(metabolome_rf, abx == 'cefoperazone')
cef_rf$abx <- NULL
cef_rf$susceptibility <- NULL
clinda_rf <- subset(metabolome_rf, abx == 'clindamycin')
clinda_rf$abx <- NULL
clinda_rf$susceptibility <- NULL
strep_rf <- subset(metabolome_rf, abx == 'streptomycin')
strep_rf$abx <- NULL
strep_rf$susceptibility <- NULL
metabolome_rf$abx <- NULL
metabolome_rf$infection <- NULL
# Calculate significant differences
noabx_p <- round(adonis(metabolome_rf[,2:ncol(metabolome_rf)]~factor(metabolome_rf$susceptibility), data=metabolome_rf, permutations=10000, method='jaccard')$aov.tab[[6]][1], 3)
abx_p <- round(adonis(abx_rf[,2:ncol(abx_rf)]~factor(abx_rf$abx), data=abx_rf, permutations=10000, method='jaccard')$aov.tab[[6]][1], 3)
strep_p <- round(adonis(strep_rf[,2:ncol(strep_rf)]~factor(strep_rf$infection), data=strep_rf, permutations=10000, method='jaccard')$aov.tab[[6]][1], 3)
cef_p <- round(adonis(cef_rf[,2:ncol(cef_rf)]~factor(cef_rf$infection), data=cef_rf, permutations=10000, method='jaccard')$aov.tab[[6]][1], 3)
clinda_p <- round(adonis(clinda_rf[,2:ncol(clinda_rf)]~factor(clinda_rf$infection), data=clinda_rf, permutations=10000, method='jaccard')$aov.tab[[6]][1], 3)
# Random Forest
# Run feature selection
cef_rf <- featureselect_RF(cef_rf, 'infection')
clinda_rf <- featureselect_RF(clinda_rf, 'infection')
strep_rf <- featureselect_RF(strep_rf, 'infection')
# Sort and subset top hits
cef_rf <- cef_rf[order(-cef_rf$final_features_RF),][1:5,]
cef_rf <- cef_rf[order(cef_rf$final_features_RF),]
cef_rf$abx <- rep('Cefoperazone', nrow(cef_rf))
clinda_rf <- clinda_rf[order(-clinda_rf$final_features_RF),][1:5,]
clinda_rf <- clinda_rf[order(clinda_rf$final_features_RF),]
clinda_rf$abx <- rep('Clindamycin', nrow(clinda_rf))
strep_rf <- strep_rf[order(-strep_rf$final_features_RF),][1:5,]
strep_rf <- strep_rf[order(strep_rf$final_features_RF),]
strep_rf$abx <- rep('Streptomycin', nrow(strep_rf))
abx_rf <- rbind(strep_rf, cef_rf, clinda_rf)
abx_rf$abx <- factor(abx_rf$abx, levels=c('Streptomycin', 'Cefoperazone', 'Clindamycin'))
abx_rf$feature <- gsub('_', ' ', abx_rf$feature)
abx_rf$feature <- gsub(' \\(d18\\:1\\/16\\:0\\)', '', abx_rf$feature)
rm(strep_rf, cef_rf, clinda_rf)
#-------------------------------------------------------------------------------------------------------------------------#
# Calculate axes
# Metabolome - all
metabolome_nmds <- metaMDS(metabolome, k=2, trymax=100, distance='bray')$points
metabolome_nmds <- clean_merge(metadata, metabolome_nmds)
metabolome_nmds$MDS1 <- metabolome_nmds$MDS1 + 0.15
metabolome_nmds$MDS2 <- metabolome_nmds$MDS2 - 0.05
# Subset NMDS axes to color points - all
metabolome_cefoperazone <- subset(metabolome_nmds, abx == 'cefoperazone')
metabolome_cefoperazone_630 <- subset(metabolome_cefoperazone, infection == '630')
metabolome_cefoperazone_mock <- subset(metabolome_cefoperazone, infection == 'mock')
rm(metabolome_cefoperazone)
metabolome_clindamycin <- subset(metabolome_nmds, abx == 'clindamycin')
metabolome_clindamycin_630 <- subset(metabolome_clindamycin, infection == '630')
metabolome_clindamycin_mock <- subset(metabolome_clindamycin, infection == 'mock')
rm(metabolome_clindamycin)
metabolome_streptomycin <- subset(metabolome_nmds, abx == 'streptomycin')
metabolome_streptomycin_630 <- subset(metabolome_streptomycin, infection == '630')
metabolome_streptomycin_mock <- subset(metabolome_streptomycin, infection == 'mock')
rm(metabolome_streptomycin)
metabolome_noantibiotics <- subset(metabolome_nmds, abx == 'none')
#----------------#
# Separate analysis
abx_metabolome <- metabolome[,!colnames(metabolome) %in% c('ConvC1M1','ConvC1M2','ConvC1M3','ConvC1M4',
'ConvC2M1','ConvC2M2','ConvC2M3','ConvC2M4','ConvC2M5')] # Untreated SPF samples
cef_metabolome <- metabolome[rownames(metabolome) %in% c('CefC1M1','CefC1M2','CefC1M3',
'CefC2M1','CefC2M2','CefC2M3',
'CefC3M1','CefC3M2','CefC3M3',
'CefC4M1','CefC4M2','CefC4M3',
'CefC5M1','CefC5M2','CefC5M3',
'CefC6M1','CefC6M2','CefC6M3'), ]
clinda_metabolome <- metabolome[rownames(metabolome) %in% c('ClindaC1M1','ClindaC1M2','ClindaC1M3',
'ClindaC2M1','ClindaC2M2','ClindaC2M3',
'ClindaC3M1','ClindaC3M2','ClindaC3M3',
'ClindaC4M1','ClindaC4M2','ClindaC4M3',
'ClindaC5M1','ClindaC5M2','ClindaC5M3',
'ClindaC6M1','ClindaC6M2','ClindaC6M3'), ]
strep_metabolome <- metabolome[rownames(metabolome) %in% c('StrepC1M1','StrepC1M2','StrepC1M3',
'StrepC2M1','StrepC2M2','StrepC2M3',
'StrepC3M1','StrepC3M2','StrepC3M3',
'StrepC4M1','StrepC4M2','StrepC4M3',
'StrepC5M1','StrepC5M2','StrepC5M3',
'StrepC6M1','StrepC6M2','StrepC6M3'), ]
# Calculate axes and merge with metadata
abx_metabolome_nmds <- metaMDS(abx_metabolome, k=2, trymax=100)$points
abx_metabolome_nmds <- clean_merge(metadata, abx_metabolome_nmds)
abx_metabolome_nmds$MDS1 <- abx_metabolome_nmds$MDS1 - 0.05
cef_metabolome_nmds <- metaMDS(cef_metabolome, k=2, trymax=100)$points
cef_metabolome_nmds <- clean_merge(metadata, cef_metabolome_nmds)
clinda_metabolome_nmds <- metaMDS(clinda_metabolome, k=2, trymax=100)$points
clinda_metabolome_nmds <- clean_merge(metadata, clinda_metabolome_nmds)
strep_metabolome_nmds <- metaMDS(strep_metabolome, k=2, trymax=100)$points
strep_metabolome_nmds <- clean_merge(metadata, strep_metabolome_nmds)
# Subset to points for plot
metabolome_abx <- subset(abx_metabolome_nmds, abx == 'cefoperazone')
metabolome_abx_cef_630 <- subset(metabolome_abx, infection == '630')
metabolome_abx_cef_mock <- subset(metabolome_abx, infection == 'mock')
metabolome_abx <- subset(abx_metabolome_nmds, abx == 'clindamycin')
metabolome_abx_clinda_630 <- subset(metabolome_abx, infection == '630')
metabolome_abx_clinda_mock <- subset(metabolome_abx, infection == 'mock')
metabolome_abx <- subset(abx_metabolome_nmds, abx == 'streptomycin')
metabolome_abx_strep_630 <- subset(metabolome_abx, infection == '630')
metabolome_abx_strep_mock <- subset(metabolome_abx, infection == 'mock')
rm(metabolome_abx)
cef_metabolome_nmds$MDS2 <- cef_metabolome_nmds$MDS2 - 0.02
clinda_metabolome_nmds$MDS1 <- clinda_metabolome_nmds$MDS1 + 0.1
cef_metabolome_nmds_630 <- subset(cef_metabolome_nmds, infection == '630')
cef_metabolome_nmds_mock <- subset(cef_metabolome_nmds, infection == 'mock')
clinda_metabolome_nmds_630 <- subset(clinda_metabolome_nmds, infection == '630')
clinda_metabolome_nmds_mock <- subset(clinda_metabolome_nmds, infection == 'mock')
strep_metabolome_nmds_630 <- subset(strep_metabolome_nmds, infection == '630')
strep_metabolome_nmds_mock <- subset(strep_metabolome_nmds, infection == 'mock')
# Calculate centroids
cef_metabolome_centoids <- aggregate(cbind(cef_metabolome_nmds$MDS1,cef_metabolome_nmds$MDS2)~cef_metabolome_nmds$infection, data=cef_metabolome_nmds, mean)
clinda_metabolome_centoids <- aggregate(cbind(clinda_metabolome_nmds$MDS1,clinda_metabolome_nmds$MDS2)~clinda_metabolome_nmds$infection, data=clinda_metabolome_nmds, mean)
strep_metabolome_centoids <- aggregate(cbind(strep_metabolome_nmds$MDS1,strep_metabolome_nmds$MDS2)~strep_metabolome_nmds$infection, data=strep_metabolome_nmds, mean)
# sort metabolome tables equally
metabolome <- metabolome[match(rownames(metabolome_nmds), rownames(metabolome)),]
#-------------------------------------------------------------------------------------------------------------------------#
# Plot the figure
pdf(file=plot_file, width=8, height=12)
layout(matrix(c(1,2,
3,4,
5,6),
nrow=3, ncol=2, byrow=TRUE))
par(mar=c(4,4,1,1), las=1, mgp=c(2.8,0.75,0))
#-------------------------------------------------------------#
# All conventional mice
plot(x=metabolome_nmds$MDS1, y=metabolome_nmds$MDS2, xlim=c(-0.25,0.25), ylim=c(-0.15,0.15),
xlab='NMDS axis 1', ylab='NMDS axis 2', pch=19, cex.axis=1.2, cex.lab=1.2)
mtext('a', side=2, line=2, las=2, adj=1.8, padj=-9.5, cex=1.4, font=2)
points(x=metabolome_cefoperazone_630$MDS1, y=metabolome_cefoperazone_630$MDS2, bg=cef_col, pch=21, cex=2, lwd=1.2)
points(x=metabolome_clindamycin_630$MDS1, y=metabolome_clindamycin_630$MDS2, bg=clinda_col, pch=21, cex=2, lwd=1.2)
points(x=metabolome_streptomycin_630$MDS1, y=metabolome_streptomycin_630$MDS2, bg=strep_col, pch=21, cex=2, lwd=1.2)
points(x=metabolome_cefoperazone_mock$MDS1, y=metabolome_cefoperazone_mock$MDS2, bg=cef_col, pch=24, cex=1.8, lwd=1.2)
points(x=metabolome_clindamycin_mock$MDS1, y=metabolome_clindamycin_mock$MDS2, bg=clinda_col, pch=24, cex=1.8, lwd=1.2)
points(x=metabolome_streptomycin_mock$MDS1, y=metabolome_streptomycin_mock$MDS2, bg=strep_col, pch=24, cex=1.8, lwd=1.2)
points(x=metabolome_noantibiotics$MDS1, y=metabolome_noantibiotics$MDS2, bg=noabx_col, pch=24, cex=1.8, lwd=1.2)
legend('bottomleft', legend=c('Resistant vs Susceptible', as.expression(bquote(paste(italic('p'),' < 0.001 ***')))),
pch=1, cex=1.4, pt.cex=0, bty='n')
legend('topleft', legend=c(as.expression(bquote(paste(italic('C. difficile')))),'Mock'),
col='black', pch=c(16,17), cex=1.4, pt.cex=c(2.4,2.1))
legend('topright', legend=c('No Antibiotic','Streptomycin','Cefoperzone','Clindamycin'),
pt.bg=c(noabx_col,strep_col,cef_col,clinda_col), pch=22, cex=1.4, pt.cex=2.5)
#-------------------------------------------------------------#
# Antibiotics only
plot(x=abx_metabolome_nmds$MDS1, y=abx_metabolome_nmds$MDS2, xlim=c(-0.075,0.075), ylim=c(-0.075,0.075),
xlab='NMDS axis 1', ylab='NMDS axis 2', pch=19, cex.axis=1.2, cex.lab=1.2)
mtext('b', side=2, line=2, las=2, adj=1.8, padj=-9.5, cex=1.4, font=2)
points(x=metabolome_abx_cef_630$MDS1, y=metabolome_abx_cef_630$MDS2, bg=cef_col, pch=21, cex=2, lwd=1.2)
points(x=metabolome_abx_cef_mock$MDS1, y=metabolome_abx_cef_mock$MDS2, bg=cef_col, pch=24, cex=2, lwd=1.2)
points(x=metabolome_abx_clinda_630$MDS1, y=metabolome_abx_clinda_630$MDS2, bg=clinda_col, pch=21, cex=2, lwd=1.2)
points(x=metabolome_abx_clinda_mock$MDS1, y=metabolome_abx_clinda_mock$MDS2, bg=clinda_col, pch=24, cex=2, lwd=1.2)
points(x=metabolome_abx_strep_630$MDS1, y=metabolome_abx_strep_630$MDS2, bg=strep_col, pch=21, cex=2, lwd=1.2)
points(x=metabolome_abx_strep_mock$MDS1, y=metabolome_abx_strep_mock$MDS2, bg=strep_col, pch=24, cex=2, lwd=1.2)
legend('bottomleft', legend=c('Between Antibiotic Groups', as.expression(bquote(paste(italic('p'),' < 0.001 ***')))),
pch=1, cex=1.4, pt.cex=0, bty='n')
#-------------------------------------------------------------#
#Streptomycin
plot(x=strep_metabolome_nmds$MDS1, y=strep_metabolome_nmds$MDS2, xlim=c(-0.25,0.25), ylim=c(-0.15,0.15),
xlab='NMDS axis 1', ylab='NMDS axis 2', pch=19, cex.axis=1.2, cex.lab=1.2)
mtext('c', side=2, line=2, las=2, adj=1.8, padj=-9.5, cex=1.4, font=2)
legend('topleft', legend='Streptomycin-pretreated', pch=1, cex=1.5, pt.cex=0, bty='n')
segments(x0=strep_metabolome_nmds_630$MDS1, y0=strep_metabolome_nmds_630$MDS2, x1=strep_metabolome_centoids[1,2], y1=strep_metabolome_centoids[1,3], col='gray30')
segments(x0=strep_metabolome_nmds_mock$MDS1, y0=strep_metabolome_nmds_mock$MDS2, x1=strep_metabolome_centoids[2,2], y1=strep_metabolome_centoids[2,3], col='gray30')
points(x=strep_metabolome_nmds_630$MDS1, y=strep_metabolome_nmds_630$MDS2, bg=strep_col, pch=21, cex=2, lwd=1.2)
points(x=strep_metabolome_nmds_mock$MDS1, y=strep_metabolome_nmds_mock$MDS2, bg=strep_col, pch=24, cex=2, lwd=1.2)
legend('bottomleft', legend=c('Mock vs Infected', as.expression(bquote(paste(italic('p'),' = 0.039 *')))),
pch=1, cex=1.4, pt.cex=0, bty='n')
#-------------------------------------------------------------#
# Cefoperazone
plot(x=cef_metabolome_nmds$MDS1, y=cef_metabolome_nmds$MDS2, xlim=c(-0.15,0.15), ylim=c(-0.15,0.15),
xlab='NMDS axis 1', ylab='NMDS axis 2', pch=19, cex.axis=1.2, cex.lab=1.2)
mtext('d', side=2, line=2, las=2, adj=1.8, padj=-9.5, cex=1.4, font=2)
legend('topleft', legend='Cefoperazone-pretreated', pch=1, cex=1.5, pt.cex=0, bty='n')
segments(x0=cef_metabolome_nmds_630$MDS1, y0=cef_metabolome_nmds_630$MDS2, x1=cef_metabolome_centoids[1,2], y1=cef_metabolome_centoids[1,3], col='gray30')
segments(x0=cef_metabolome_nmds_mock$MDS1, y0=cef_metabolome_nmds_mock$MDS2, x1=cef_metabolome_centoids[2,2], y1=cef_metabolome_centoids[2,3], col='gray30')
points(x=cef_metabolome_nmds_630$MDS1, y=cef_metabolome_nmds_630$MDS2, bg=cef_col, pch=21, cex=2, lwd=1.2)
points(x=cef_metabolome_nmds_mock$MDS1, y=cef_metabolome_nmds_mock$MDS2, bg=cef_col, pch=24, cex=2, lwd=1.2)
legend('bottomleft', legend=c('Mock vs Infected', as.expression(bquote(paste(italic('p'),' = 0.016 *')))),
pch=1, cex=1.4, pt.cex=0, bty='n')
#-------------------------------------------------------------#
# Clindamycin
plot(x=clinda_metabolome_nmds$MDS1-0.075, y=clinda_metabolome_nmds$MDS2, xlim=c(-0.15,0.15), ylim=c(-0.1,0.1),
xlab='NMDS axis 1', ylab='NMDS axis 2', pch=19, cex.axis=1.2, cex.lab=1.2)
mtext('e', side=2, line=2, las=2, adj=1.8, padj=-9.5, cex=1.5, font=2)
legend('topleft', legend='Clindamycin-pretreated', pch=1, cex=1.4, pt.cex=0, bty='n')
segments(x0=clinda_metabolome_nmds_630$MDS1-0.075, y0=clinda_metabolome_nmds_630$MDS2, x1=clinda_metabolome_centoids[1,2]-0.075, y1=clinda_metabolome_centoids[1,3], col='gray30')
segments(x0=clinda_metabolome_nmds_mock$MDS1-0.0751, y0=clinda_metabolome_nmds_mock$MDS2, x1=clinda_metabolome_centoids[2,2]-0.075, y1=clinda_metabolome_centoids[2,3], col='gray30')
points(x=clinda_metabolome_nmds_630$MDS1-0.075, y=clinda_metabolome_nmds_630$MDS2, bg=clinda_col, pch=21, cex=2, lwd=1.2)
points(x=clinda_metabolome_nmds_mock$MDS1-0.075, y=clinda_metabolome_nmds_mock$MDS2, bg=clinda_col, pch=24, cex=2, lwd=1.2)
legend('bottomleft', legend=c('Mock vs Infected',as.expression(bquote(paste(italic('p'),' = 0.127 n.s.')))),
pch=1, cex=1.4, pt.cex=0, bty='n')
#-------------------------------------------------------------#
# Random Forest results
par(mar=c(3,3,1,1), xaxs='i', xpd=FALSE, mgp=c(2,1,0))
dotchart(abx_rf$final_features_RF, labels=abx_rf$feature,
lcolor=NA, cex=0.9, groups=abx_rf$abx, color='black',
xlab='MDA', xlim=c(0,10), pch=18, lwd=3,
gcolor=c(strep_col, cef_col, clinda_col))
mtext('f', side=2, line=2, las=2, adj=1.6, padj=-10, cex=1.4, font=2)
segments(x0=rep(-0, 14), y0=c(1:5, 8:12, 15:19),
x1=rep(10, 14), y1=c(1:5, 8:12, 15:19), lty=2, col='gray45') # Dotted lines
dev.off()
#-------------------------------------------------------------------------------------------------------------------------#
# Clean up
for (dep in deps){
pkg <- paste('package:', dep, sep='')
detach(pkg, character.only = TRUE)
}
setwd(starting_dir)
rm(list=ls())
gc()
