View(pathway)
?grep
grep('cpd:', pathway$ko)
pathway <- pathway[!grep('cpd:', pathway$ko),]
library(vegan)
library(stringr)
cef_reads <- read.delim('~/Desktop/Repositories/Jenior_Transcriptomics_2015/data/metabolic_models/expression/cefoperazone_630.RNA_reads2cdf630.norm.ko.pick.txt',
sep='\t', header=F)
colnames(cef_reads) <- c('ko', 'cefoperazone')
cef_reads <- aggregate(cefoperazone~ko,data=cef_reads,FUN=sum)
clinda_reads <- read.delim('~/Desktop/Repositories/Jenior_Transcriptomics_2015/data/metabolic_models/expression/clindamycin_630.RNA_reads2cdf630.norm.ko.pick.txt',
sep='\t', header=F)
colnames(clinda_reads) <- c('ko', 'clindamycin')
clinda_reads <- aggregate(clindamycin~ko,data=clinda_reads,FUN=sum)
strep_reads <- read.delim('~/Desktop/Repositories/Jenior_Transcriptomics_2015/data/metabolic_models/expression/streptomycin_630.RNA_reads2cdf630.norm.ko.pick.txt',
sep='\t', header=F)
colnames(strep_reads) <- c('ko', 'streptomycin')
strep_reads <- aggregate(streptomycin~ko,data=strep_reads,FUN=sum)
gf_reads <- read.delim('~/Desktop/Repositories/Jenior_Transcriptomics_2015/data/metabolic_models/expression/germfree.RNA_reads2cdf630.norm.ko.pick.txt',
sep='\t', header=F)
colnames(gf_reads) <- c('ko', 'germfree')
gf_reads <- aggregate(germfree~ko,data=gf_reads,FUN=sum)
reads <- merge(cef_reads, clinda_reads, by='ko')
reads <- merge(reads, strep_reads, by='ko')
reads <- merge(reads, gf_reads, by='ko')
rm(cef_reads, clinda_reads, strep_reads, gf_reads)
sub_size <- ceiling(min(colSums(reads[,2:5])) * 0.95)
reads[,2] <- as.vector(rrarefy(floor(reads[,2]), sample=sub_size))
reads[,3] <- as.vector(rrarefy(floor(reads[,3]), sample=sub_size))
reads[,4] <- as.vector(rrarefy(floor(reads[,4]), sample=sub_size))
reads[,5] <- as.vector(rrarefy(floor(reads[,5]), sample=sub_size))
rm(sub_size)
defs <- read.delim('~/Desktop/Repositories/Jenior_Transcriptomics_2015/data/kegg/ko_definition.list',
sep='\t', header=FALSE, quote='')
colnames(defs) <- c('ko', 'definition')
defs$definition <- gsub(' ', '_', defs$definition)
reads <- merge(reads, defs, by='ko')
rm(defs)
cdf <- read.delim('~/Desktop/Repositories/Jenior_Transcriptomics_2015/data/kegg/cdf_ko.list',
sep='\t', header=FALSE)
colnames(cdf) <- c('CD630_gene', 'ko')
cdf$ko <- cdf$ko %>% str_replace('ko:', '')
cdf <- aggregate(CD630_gene~ko, cdf, paste, collapse=",")
reads <- merge(reads, cdf, by='ko', all.x=TRUE, all.y=FALSE)
rm(cdf)
ko_path <- read.delim('~/Desktop/Repositories/Jenior_Transcriptomics_2015/data/kegg/ko.list',
sep='\t', header=FALSE)
ko_path$V3 <- NULL
colnames(ko_path) <- c('pathway','ko')
ko_path$pathway <- ko_path$pathway %>% str_replace('path:ko', '')
ko_path$ko <- ko_path$ko %>% str_replace('ko:', '')
pathway <- read.delim('~/Desktop/Repositories/Jenior_Transcriptomics_2015/data/kegg/pathway.list',
sep='\t', header=FALSE)
colnames(pathway) <- c('pathway','pathway_name')
pathway$pathway <- pathway$pathway %>% str_replace('path:', '')
pathway <- merge(pathway, ko_path, by='pathway', all.x=TRUE, all.y=FALSE)
rm(ko_path)
pathway$pathway <- NULL
pathway <- aggregate(pathway_name~ko, pathway, paste, collapse=",")
grep('cpd:', pathway$ko)
View(pathway)
pathway$ko
View(pathway)
grep('K', pathway$ko)
pathway <- pathway[grep('K', pathway$ko),]
View(pathway)
pathway <- pathway[grep('K', pathway$ko),]
reads <- merge(reads, pathway, by='pathway', all.x=TRUE, all.y=FALSE)
reads <- merge(reads, pathway, by='ko', all.x=TRUE, all.y=FALSE)
rm(pathway)
View(reads)
reaction <- read.delim('~/Desktop/Repositories/Jenior_Transcriptomics_2015/data/kegg/ko_reaction.list',
sep='\t', header=FALSE)
colnames(reaction) <- c('ko', 'reaction')
reaction$ko <- reaction$ko %>% str_replace('ko:', '')
reaction$reaction <- reaction$reaction %>% str_replace('rn:', '')
reaction_map <- read.delim('~/Desktop/Repositories/Jenior_Transcriptomics_2015/data/kegg/reaction_mapformula.lst',
sep=':', header=FALSE)
reaction_map$V2 <- NULL
colnames(reaction_map) <- c('reaction', 'formulas')
reaction_map$formulas <- gsub(' ', '', reaction_map$formulas)
reaction_map <- unique(reaction_map)
reaction_map <- aggregate(formulas~reaction, reaction_map, paste, collapse=",")
reaction <- merge(reaction, reaction_map, by='reaction', all.x=TRUE, all.y=FALSE)
library(vegan)
library(stringr)
cef_reads <- read.delim('~/Desktop/Repositories/Jenior_Transcriptomics_2015/data/metabolic_models/expression/cefoperazone_630.RNA_reads2cdf630.norm.ko.pick.txt',
sep='\t', header=F)
colnames(cef_reads) <- c('ko', 'cefoperazone')
cef_reads <- aggregate(cefoperazone~ko,data=cef_reads,FUN=sum)
clinda_reads <- read.delim('~/Desktop/Repositories/Jenior_Transcriptomics_2015/data/metabolic_models/expression/clindamycin_630.RNA_reads2cdf630.norm.ko.pick.txt',
sep='\t', header=F)
colnames(clinda_reads) <- c('ko', 'clindamycin')
clinda_reads <- aggregate(clindamycin~ko,data=clinda_reads,FUN=sum)
strep_reads <- read.delim('~/Desktop/Repositories/Jenior_Transcriptomics_2015/data/metabolic_models/expression/streptomycin_630.RNA_reads2cdf630.norm.ko.pick.txt',
sep='\t', header=F)
colnames(strep_reads) <- c('ko', 'streptomycin')
strep_reads <- aggregate(streptomycin~ko,data=strep_reads,FUN=sum)
gf_reads <- read.delim('~/Desktop/Repositories/Jenior_Transcriptomics_2015/data/metabolic_models/expression/germfree.RNA_reads2cdf630.norm.ko.pick.txt',
sep='\t', header=F)
colnames(gf_reads) <- c('ko', 'germfree')
gf_reads <- aggregate(germfree~ko,data=gf_reads,FUN=sum)
reads <- merge(cef_reads, clinda_reads, by='ko')
reads <- merge(reads, strep_reads, by='ko')
reads <- merge(reads, gf_reads, by='ko')
rm(cef_reads, clinda_reads, strep_reads, gf_reads)
sub_size <- ceiling(min(colSums(reads[,2:5])) * 0.95)
reads[,2] <- as.vector(rrarefy(floor(reads[,2]), sample=sub_size))
reads[,3] <- as.vector(rrarefy(floor(reads[,3]), sample=sub_size))
reads[,4] <- as.vector(rrarefy(floor(reads[,4]), sample=sub_size))
reads[,5] <- as.vector(rrarefy(floor(reads[,5]), sample=sub_size))
rm(sub_size)
defs <- read.delim('~/Desktop/Repositories/Jenior_Transcriptomics_2015/data/kegg/ko_definition.list',
sep='\t', header=FALSE, quote='')
colnames(defs) <- c('ko', 'definition')
defs$definition <- gsub(' ', '_', defs$definition)
reads <- merge(reads, defs, by='ko')
rm(defs)
cdf <- read.delim('~/Desktop/Repositories/Jenior_Transcriptomics_2015/data/kegg/cdf_ko.list',
sep='\t', header=FALSE)
colnames(cdf) <- c('CD630_gene', 'ko')
cdf$ko <- cdf$ko %>% str_replace('ko:', '')
cdf <- aggregate(CD630_gene~ko, cdf, paste, collapse=",")
reads <- merge(reads, cdf, by='ko', all.x=TRUE, all.y=FALSE)
rm(cdf)
ko_path <- read.delim('~/Desktop/Repositories/Jenior_Transcriptomics_2015/data/kegg/ko.list',
sep='\t', header=FALSE)
ko_path$V3 <- NULL
colnames(ko_path) <- c('pathway','ko')
ko_path$pathway <- ko_path$pathway %>% str_replace('path:ko', '')
ko_path$ko <- ko_path$ko %>% str_replace('ko:', '')
pathway <- read.delim('~/Desktop/Repositories/Jenior_Transcriptomics_2015/data/kegg/pathway.list',
sep='\t', header=FALSE)
colnames(pathway) <- c('pathway','pathway_name')
pathway$pathway <- pathway$pathway %>% str_replace('path:', '')
pathway <- merge(pathway, ko_path, by='pathway', all.x=TRUE, all.y=FALSE)
rm(ko_path)
pathway$pathway <- NULL
pathway <- aggregate(pathway_name~ko, pathway, paste, collapse=",")
pathway <- pathway[grep('K', pathway$ko),]
reads <- merge(reads, pathway, by='ko', all.x=TRUE, all.y=FALSE)
rm(pathway)
reaction <- read.delim('~/Desktop/Repositories/Jenior_Transcriptomics_2015/data/kegg/ko_reaction.list',
sep='\t', header=FALSE)
colnames(reaction) <- c('ko', 'reaction')
reaction$ko <- reaction$ko %>% str_replace('ko:', '')
reaction$reaction <- reaction$reaction %>% str_replace('rn:', '')
reaction_map <- read.delim('~/Desktop/Repositories/Jenior_Transcriptomics_2015/data/kegg/reaction_mapformula.lst',
sep=':', header=FALSE)
reaction_map$V2 <- NULL
colnames(reaction_map) <- c('reaction', 'formulas')
reaction_map$formulas <- gsub(' ', '', reaction_map$formulas)
reaction_map <- unique(reaction_map)
reaction_map <- aggregate(formulas~reaction, reaction_map, paste, collapse=",")
reaction <- merge(reaction, reaction_map, by='reaction', all.x=TRUE, all.y=FALSE)
rm(reaction_map)
reaction <- reaction[complete.cases(reaction),]
reaction <- aggregate(cbind(reaction,formulas)~ko, reaction, paste, collapse=",")
reads <- merge(reads, reaction, by='ko', all.x=TRUE, all.y=FALSE)
rm(reaction)
colnames(reads) <- c('KO','cefoperazone-pretreated','clindamycin-pretreated','streptomycin-pretreated',
'ex-germfree','gene_name','CD630_genes','pathways','enzymatic_reactions','chemical_formulas')
write.table(reads, file='~/Desktop/Repositories/Jenior_Transcriptomics_2015/data/kegg/ko_mapping.tsv', row.names=FALSE, quote=FALSE, sep='\t')
rm(reads)
# Set up environment
rm(list=ls())
gc()
# Load in functions
starting_dir <- getwd()
source('~/Desktop/Repositories/Jenior_Metatranscriptomics_2016/code/R/functions.R')
# Define files
# Normalized Metatranscriptomes
cef_normalized_reads <- 'data/read_mapping/cef_normalized_metaT.tsv'
clinda_normalized_reads <- 'data/read_mapping/clinda_normalized_metaT.tsv'
strep_normalized_reads <- 'data/read_mapping/strep_normalized_metaT.tsv'
# KEGG pathway annotations for genes
cef_pathways <- 'data/read_mapping/pathway_expression/cef_pathways.tsv'
clinda_pathways <- 'data/read_mapping/pathway_expression/clinda_pathways.tsv'
strep_pathways <- 'data/read_mapping/pathway_expression/strep_pathways.tsv'
# Output plot
plot_file <- 'results/figures/figure_2.pdf'
#--------------------------------------------------------------------------------------------------#
# Read in data
# Normalized Metatranscriptomes
cef_normalized_reads <- read.delim(cef_normalized_reads, sep='\t', header=TRUE, stringsAsFactors=FALSE, row.names=7)
clinda_normalized_reads <- read.delim(clinda_normalized_reads, sep='\t', header=TRUE, stringsAsFactors=FALSE, row.names=7)
strep_normalized_reads <- read.delim(strep_normalized_reads, sep='\t', header=TRUE, stringsAsFactors=FALSE, row.names=7)
# Pooled pathway mappings
cef_pathways <- read.delim(cef_pathways, sep='\t', header=TRUE, row.names=3)
clinda_pathways <- read.delim(clinda_pathways, sep='\t', header=TRUE, row.names=3)
strep_pathways <- read.delim(strep_pathways, sep='\t', header=TRUE, row.names=3)
#--------------------------------------------------------------------------------------------------#
# Format data
# Remove C. difficile genes
cdiff_omit <- c('cdf','pdc','cdc','cdl','pdf')
cef_normalized_reads <- cef_normalized_reads[!cef_normalized_reads$organism %in% cdiff_omit,]
clinda_normalized_reads <- clinda_normalized_reads[!clinda_normalized_reads$organism %in% cdiff_omit,]
strep_normalized_reads <- strep_normalized_reads[!strep_normalized_reads$organism %in% cdiff_omit,]
rm(cdiff_omit)
# Find number of genes with organism annotation
cef_orgs <- as.numeric(length(which(!is.na(cef_normalized_reads$organism))))
clinda_orgs <- as.numeric(length(which(!is.na(clinda_normalized_reads$organism))))
strep_orgs <- as.numeric(length(which(!is.na(strep_normalized_reads$organism))))
all_cef <- as.numeric(nrow(cef_normalized_reads))
all_clinda <- as.numeric(nrow(clinda_normalized_reads))
all_strep <- as.numeric(nrow(strep_normalized_reads))
# Screen for those genes that have a gene annotation
cef_annotated <- cef_normalized_reads[!rownames(cef_normalized_reads) %in% rownames(cef_normalized_reads[grep('unknown_\\d', rownames(cef_normalized_reads)),]), ]
clinda_annotated <- clinda_normalized_reads[!rownames(clinda_normalized_reads) %in% rownames(clinda_normalized_reads[grep('unknown_\\d', rownames(clinda_normalized_reads)),]), ]
strep_annotated <- strep_normalized_reads[!rownames(strep_normalized_reads) %in% rownames(strep_normalized_reads[grep('unknown_\\d', rownames(strep_normalized_reads)),]), ]
rm(cef_normalized_reads, clinda_normalized_reads, strep_normalized_reads)
# Screen out ribosomal genes
cef_annotated <- subset(cef_annotated, !grepl('Ribosomal_RNA*', cef_annotated$description))
cef_annotated <- subset(cef_annotated, !grepl('ribosomal_RNA*', cef_annotated$description))
cef_annotated <- subset(cef_annotated, !grepl('*ribosomal_RNA*', cef_annotated$description))
clinda_annotated <- subset(clinda_annotated, !grepl('Ribosomal_RNA*', clinda_annotated$description))
clinda_annotated <- subset(clinda_annotated, !grepl('ribosomal_RNA*', clinda_annotated$description))
clinda_annotated <- subset(clinda_annotated, !grepl('*ribosomal_RNA*', clinda_annotated$description))
strep_annotated <- subset(strep_annotated, !grepl('Ribosomal_RNA*', strep_annotated$description))
strep_annotated <- subset(strep_annotated, !grepl('ribosomal_RNA*', strep_annotated$description))
strep_annotated <- subset(strep_annotated, !grepl('*ribosomal_RNA*', strep_annotated$description))
# Remove hypothetical and uncharacterized annotations
cef_annotated <- subset(cef_annotated, description != 'hypothetical_protein')
cef_annotated <- subset(cef_annotated, description != 'uncharacterized_*')
clinda_annotated <- subset(clinda_annotated, description != 'hypothetical_protein')
clinda_annotated <- subset(clinda_annotated, description != 'uncharacterized_*')
strep_annotated <- subset(strep_annotated, description != 'hypothetical_protein')
strep_annotated <- subset(strep_annotated, description != 'uncharacterized_*')
cef_annotated <- aggregate(cbind(cef_annotated$cef_630_metaT_reads, cef_annotated$cef_mock_metaT_reads), by=list(cef_annotated$description), FUN=sum)
colnames(cef_annotated) <- c('gene', 'cef_630_reads', 'cef_mock_reads')
clinda_annotated <- aggregate(cbind(clinda_annotated$clinda_630_metaT_reads, clinda_annotated$clinda_mock_metaT_reads), by=list(clinda_annotated$description), FUN=sum)
colnames(clinda_annotated) <- c('gene', 'clinda_630_reads', 'clinda_mock_reads')
strep_annotated <- aggregate(cbind(strep_annotated$strep_630_metaT_reads, strep_annotated$strep_mock_metaT_reads), by=list(strep_annotated$description), FUN=sum)
colnames(strep_annotated) <- c('gene', 'strep_630_reads', 'strep_mock_reads')
# Aggregate pathways
cef_pathways <- aggregate(cbind(cef_pathways$cef_630_metaT_reads, cef_pathways$cef_mock_metaT_reads), by=list(cef_pathways$pathways), FUN=sum)
colnames(cef_pathways) <- c('pathway', 'cef_630_reads', 'cef_mock_reads')
clinda_pathways <- aggregate(cbind(clinda_pathways$clinda_630_metaT_reads, clinda_pathways$clinda_mock_metaT_reads), by=list(clinda_pathways$pathways), FUN=sum)
colnames(clinda_pathways) <- c('pathway', 'clinda_630_reads', 'clinda_mock_reads')
strep_pathways <- aggregate(cbind(strep_pathways$strep_630_metaT_reads, strep_pathways$strep_mock_metaT_reads), by=list(strep_pathways$pathways), FUN=sum)
colnames(strep_pathways) <- c('pathway', 'strep_630_reads', 'strep_mock_reads')
#--------------------------------------------------------------------------------------------------#
# Calculate differences between infected to mock
cef_annotated$diff <- abs(cef_annotated$cef_630_reads - cef_annotated$cef_mock_reads)
clinda_annotated$diff <- abs(clinda_annotated$clinda_630_reads - clinda_annotated$clinda_mock_reads)
strep_annotated$diff <- abs(strep_annotated$strep_630_reads - strep_annotated$strep_mock_reads)
cef_pathways$diff <- abs(cef_pathways$cef_630_reads - cef_pathways$cef_mock_reads)
clinda_pathways$diff <- abs(clinda_pathways$clinda_630_reads - clinda_pathways$clinda_mock_reads)
strep_pathways$diff <- abs(strep_pathways$strep_630_reads - strep_pathways$strep_mock_reads)
# Log transform expression
cef_annotated[,c(2:4)] <- log2(cef_annotated[,c(2:4)] + 1)
clinda_annotated[,c(2:4)] <- log2(clinda_annotated[,c(2:4)] + 1)
strep_annotated[,c(2:4)] <- log2(strep_annotated[,c(2:4)] + 1)
cef_pathways[,c(2:4)] <- log2(cef_pathways[,c(2:4)] + 1)
clinda_pathways[,c(2:4)] <- log2(clinda_pathways[,c(2:4)] + 1)
strep_pathways[,c(2:4)] <- log2(strep_pathways[,c(2:4)] + 1)
View(cef_annotated)
View(cef_annotated)
table_s1a <- strep_annotated
# Set up environment
rm(list=ls())
gc()
# Load in functions
starting_dir <- getwd()
source('~/Desktop/Repositories/Jenior_Metatranscriptomics_2016/code/R/functions.R')
# Define files
# Normalized Metatranscriptomes
cef_normalized_reads <- 'data/read_mapping/cef_normalized_metaT.tsv'
clinda_normalized_reads <- 'data/read_mapping/clinda_normalized_metaT.tsv'
strep_normalized_reads <- 'data/read_mapping/strep_normalized_metaT.tsv'
# KEGG pathway annotations for genes
cef_pathways <- 'data/read_mapping/pathway_expression/cef_pathways.tsv'
clinda_pathways <- 'data/read_mapping/pathway_expression/clinda_pathways.tsv'
strep_pathways <- 'data/read_mapping/pathway_expression/strep_pathways.tsv'
# Output plot
plot_file <- 'results/figures/figure_2.pdf'
#--------------------------------------------------------------------------------------------------#
# Read in data
# Normalized Metatranscriptomes
cef_normalized_reads <- read.delim(cef_normalized_reads, sep='\t', header=TRUE, stringsAsFactors=FALSE, row.names=7)
clinda_normalized_reads <- read.delim(clinda_normalized_reads, sep='\t', header=TRUE, stringsAsFactors=FALSE, row.names=7)
strep_normalized_reads <- read.delim(strep_normalized_reads, sep='\t', header=TRUE, stringsAsFactors=FALSE, row.names=7)
# Pooled pathway mappings
cef_pathways <- read.delim(cef_pathways, sep='\t', header=TRUE, row.names=3)
clinda_pathways <- read.delim(clinda_pathways, sep='\t', header=TRUE, row.names=3)
strep_pathways <- read.delim(strep_pathways, sep='\t', header=TRUE, row.names=3)
#--------------------------------------------------------------------------------------------------#
# Format data
# Remove C. difficile genes
cdiff_omit <- c('cdf','pdc','cdc','cdl','pdf')
cef_normalized_reads <- cef_normalized_reads[!cef_normalized_reads$organism %in% cdiff_omit,]
clinda_normalized_reads <- clinda_normalized_reads[!clinda_normalized_reads$organism %in% cdiff_omit,]
strep_normalized_reads <- strep_normalized_reads[!strep_normalized_reads$organism %in% cdiff_omit,]
rm(cdiff_omit)
# Find number of genes with organism annotation
cef_orgs <- as.numeric(length(which(!is.na(cef_normalized_reads$organism))))
clinda_orgs <- as.numeric(length(which(!is.na(clinda_normalized_reads$organism))))
strep_orgs <- as.numeric(length(which(!is.na(strep_normalized_reads$organism))))
all_cef <- as.numeric(nrow(cef_normalized_reads))
all_clinda <- as.numeric(nrow(clinda_normalized_reads))
all_strep <- as.numeric(nrow(strep_normalized_reads))
# Screen for those genes that have a gene annotation
cef_annotated <- cef_normalized_reads[!rownames(cef_normalized_reads) %in% rownames(cef_normalized_reads[grep('unknown_\\d', rownames(cef_normalized_reads)),]), ]
clinda_annotated <- clinda_normalized_reads[!rownames(clinda_normalized_reads) %in% rownames(clinda_normalized_reads[grep('unknown_\\d', rownames(clinda_normalized_reads)),]), ]
strep_annotated <- strep_normalized_reads[!rownames(strep_normalized_reads) %in% rownames(strep_normalized_reads[grep('unknown_\\d', rownames(strep_normalized_reads)),]), ]
rm(cef_normalized_reads, clinda_normalized_reads, strep_normalized_reads)
# Screen out ribosomal genes
cef_annotated <- subset(cef_annotated, !grepl('Ribosomal_RNA*', cef_annotated$description))
cef_annotated <- subset(cef_annotated, !grepl('ribosomal_RNA*', cef_annotated$description))
cef_annotated <- subset(cef_annotated, !grepl('*ribosomal_RNA*', cef_annotated$description))
clinda_annotated <- subset(clinda_annotated, !grepl('Ribosomal_RNA*', clinda_annotated$description))
clinda_annotated <- subset(clinda_annotated, !grepl('ribosomal_RNA*', clinda_annotated$description))
clinda_annotated <- subset(clinda_annotated, !grepl('*ribosomal_RNA*', clinda_annotated$description))
strep_annotated <- subset(strep_annotated, !grepl('Ribosomal_RNA*', strep_annotated$description))
strep_annotated <- subset(strep_annotated, !grepl('ribosomal_RNA*', strep_annotated$description))
strep_annotated <- subset(strep_annotated, !grepl('*ribosomal_RNA*', strep_annotated$description))
# Remove hypothetical and uncharacterized annotations
cef_annotated <- subset(cef_annotated, description != 'hypothetical_protein')
cef_annotated <- subset(cef_annotated, description != 'uncharacterized_*')
clinda_annotated <- subset(clinda_annotated, description != 'hypothetical_protein')
clinda_annotated <- subset(clinda_annotated, description != 'uncharacterized_*')
strep_annotated <- subset(strep_annotated, description != 'hypothetical_protein')
strep_annotated <- subset(strep_annotated, description != 'uncharacterized_*')
# Find annotated gene counts
cef_genes <- as.numeric(length(cef_annotated$gene))
clinda_genes <- as.numeric(length(clinda_annotated$gene))
strep_genes <- as.numeric(length(strep_annotated$gene))
# Find percent of each annotation type (genes vs organisms)
cef_gene_percent <- (cef_genes / all_cef) * 100
cef_org_percent <- (cef_orgs / all_cef) * 100
clinda_gene_percent <- (clinda_genes / all_clinda) * 100
clinda_org_percent <- (clinda_orgs / all_clinda) * 100
strep_gene_percent <- (strep_genes / all_strep) * 100
strep_org_percent <- (strep_orgs / all_strep) * 100
# Save pathway information
cef_pathways <- cef_annotated[complete.cases(cef_annotated),]
clinda_pathways <- clinda_annotated[complete.cases(clinda_annotated),]
strep_pathways <- strep_annotated[complete.cases(strep_annotated),]
# Aggregate identical genes, regardless of organism
cef_annotated <- aggregate(cbind(cef_annotated$cef_630_metaT_reads, cef_annotated$cef_mock_metaT_reads), by=list(cef_annotated$description), FUN=sum)
colnames(cef_annotated) <- c('gene', 'cef_630_reads', 'cef_mock_reads')
clinda_annotated <- aggregate(cbind(clinda_annotated$clinda_630_metaT_reads, clinda_annotated$clinda_mock_metaT_reads), by=list(clinda_annotated$description), FUN=sum)
colnames(clinda_annotated) <- c('gene', 'clinda_630_reads', 'clinda_mock_reads')
strep_annotated <- aggregate(cbind(strep_annotated$strep_630_metaT_reads, strep_annotated$strep_mock_metaT_reads), by=list(strep_annotated$description), FUN=sum)
colnames(strep_annotated) <- c('gene', 'strep_630_reads', 'strep_mock_reads')
# Aggregate pathways
cef_pathways <- aggregate(cbind(cef_pathways$cef_630_metaT_reads, cef_pathways$cef_mock_metaT_reads), by=list(cef_pathways$pathways), FUN=sum)
colnames(cef_pathways) <- c('pathway', 'cef_630_reads', 'cef_mock_reads')
clinda_pathways <- aggregate(cbind(clinda_pathways$clinda_630_metaT_reads, clinda_pathways$clinda_mock_metaT_reads), by=list(clinda_pathways$pathways), FUN=sum)
colnames(clinda_pathways) <- c('pathway', 'clinda_630_reads', 'clinda_mock_reads')
strep_pathways <- aggregate(cbind(strep_pathways$strep_630_metaT_reads, strep_pathways$strep_mock_metaT_reads), by=list(strep_pathways$pathways), FUN=sum)
colnames(strep_pathways) <- c('pathway', 'strep_630_reads', 'strep_mock_reads')
#--------------------------------------------------------------------------------------------------#
# Calculate differences between infected to mock
cef_annotated$diff <- abs(cef_annotated$cef_630_reads - cef_annotated$cef_mock_reads)
clinda_annotated$diff <- abs(clinda_annotated$clinda_630_reads - clinda_annotated$clinda_mock_reads)
strep_annotated$diff <- abs(strep_annotated$strep_630_reads - strep_annotated$strep_mock_reads)
cef_pathways$diff <- abs(cef_pathways$cef_630_reads - cef_pathways$cef_mock_reads)
clinda_pathways$diff <- abs(clinda_pathways$clinda_630_reads - clinda_pathways$clinda_mock_reads)
strep_pathways$diff <- abs(strep_pathways$strep_630_reads - strep_pathways$strep_mock_reads)
# Log transform expression
cef_annotated[,c(2:4)] <- log2(cef_annotated[,c(2:4)] + 1)
clinda_annotated[,c(2:4)] <- log2(clinda_annotated[,c(2:4)] + 1)
strep_annotated[,c(2:4)] <- log2(strep_annotated[,c(2:4)] + 1)
cef_pathways[,c(2:4)] <- log2(cef_pathways[,c(2:4)] + 1)
clinda_pathways[,c(2:4)] <- log2(clinda_pathways[,c(2:4)] + 1)
strep_pathways[,c(2:4)] <- log2(strep_pathways[,c(2:4)] + 1)
table_s1a <- strep_annotated
?write.table
# Write supplementary table panels
table_s1a <- strep_annotated
table_s1a$diff <- NULL
write.table(table_s1a, file='results/figures/supplement/tables/Table_S1a.tsv', sep='\t', col.names=TRUE, row.names=FALSE, quote=FALSE)
table_s1b <- cef_annotated
table_s1b$diff <- NULL
write.table(table_s1b, file='results/figures/supplement/tables/Table_S1b.tsv', sep='\t', col.names=TRUE, row.names=FALSE, quote=FALSE)
table_s1c <- clinda_annotated
table_s1c$diff <- NULL
write.table(table_s1c, file='results/figures/supplement/tables/Table_S1c.tsv', sep='\t', col.names=TRUE, row.names=FALSE, quote=FALSE)
rm(table_s1a, table_s1b, table_s1c)
table_s1a <- strep_annotated
table_s1a$diff <- NULL
write.table(table_s1a, file='results/figures/supplement/tables/Table_S1a.tsv', sep='\t', col.names=TRUE, row.names=FALSE, quote=FALSE)
table_s1b <- cef_annotated
table_s1b$diff <- NULL
write.table(table_s1b, file='results/figures/supplement/tables/Table_S1b.tsv', sep='\t', col.names=TRUE, row.names=FALSE, quote=FALSE)
table_s1c <- clinda_annotated
table_s1c$diff <- NULL
write.table(table_s1c, file='results/figures/supplement/tables/Table_S1c.tsv', sep='\t', col.names=TRUE, row.names=FALSE, quote=FALSE)
rm(table_s1a, table_s1b, table_s1c)
# Set up environment
rm(list=ls())
gc()
# Load in functions
starting_dir <- getwd()
source('~/Desktop/Repositories/Jenior_Metatranscriptomics_2016/code/R/functions.R')
# Define files
# Normalized Metatranscriptomes
cef_normalized_reads <- 'data/read_mapping/cef_normalized_metaT.tsv'
clinda_normalized_reads <- 'data/read_mapping/clinda_normalized_metaT.tsv'
strep_normalized_reads <- 'data/read_mapping/strep_normalized_metaT.tsv'
# KEGG pathway annotations for genes
cef_pathways <- 'data/read_mapping/pathway_expression/cef_pathways.tsv'
clinda_pathways <- 'data/read_mapping/pathway_expression/clinda_pathways.tsv'
strep_pathways <- 'data/read_mapping/pathway_expression/strep_pathways.tsv'
# Output plot
plot_file <- 'results/figures/figure_2.pdf'
#--------------------------------------------------------------------------------------------------#
# Read in data
# Normalized Metatranscriptomes
cef_normalized_reads <- read.delim(cef_normalized_reads, sep='\t', header=TRUE, stringsAsFactors=FALSE, row.names=7)
clinda_normalized_reads <- read.delim(clinda_normalized_reads, sep='\t', header=TRUE, stringsAsFactors=FALSE, row.names=7)
strep_normalized_reads <- read.delim(strep_normalized_reads, sep='\t', header=TRUE, stringsAsFactors=FALSE, row.names=7)
# Pooled pathway mappings
cef_pathways <- read.delim(cef_pathways, sep='\t', header=TRUE, row.names=3)
clinda_pathways <- read.delim(clinda_pathways, sep='\t', header=TRUE, row.names=3)
strep_pathways <- read.delim(strep_pathways, sep='\t', header=TRUE, row.names=3)
#--------------------------------------------------------------------------------------------------#
# Format data
# Remove C. difficile genes
cdiff_omit <- c('cdf','pdc','cdc','cdl','pdf')
cef_normalized_reads <- cef_normalized_reads[!cef_normalized_reads$organism %in% cdiff_omit,]
clinda_normalized_reads <- clinda_normalized_reads[!clinda_normalized_reads$organism %in% cdiff_omit,]
strep_normalized_reads <- strep_normalized_reads[!strep_normalized_reads$organism %in% cdiff_omit,]
rm(cdiff_omit)
# Find number of genes with organism annotation
cef_orgs <- as.numeric(length(which(!is.na(cef_normalized_reads$organism))))
clinda_orgs <- as.numeric(length(which(!is.na(clinda_normalized_reads$organism))))
strep_orgs <- as.numeric(length(which(!is.na(strep_normalized_reads$organism))))
all_cef <- as.numeric(nrow(cef_normalized_reads))
all_clinda <- as.numeric(nrow(clinda_normalized_reads))
all_strep <- as.numeric(nrow(strep_normalized_reads))
# Screen for those genes that have a gene annotation
cef_annotated <- cef_normalized_reads[!rownames(cef_normalized_reads) %in% rownames(cef_normalized_reads[grep('unknown_\\d', rownames(cef_normalized_reads)),]), ]
clinda_annotated <- clinda_normalized_reads[!rownames(clinda_normalized_reads) %in% rownames(clinda_normalized_reads[grep('unknown_\\d', rownames(clinda_normalized_reads)),]), ]
strep_annotated <- strep_normalized_reads[!rownames(strep_normalized_reads) %in% rownames(strep_normalized_reads[grep('unknown_\\d', rownames(strep_normalized_reads)),]), ]
rm(cef_normalized_reads, clinda_normalized_reads, strep_normalized_reads)
# Screen out ribosomal genes
cef_annotated <- subset(cef_annotated, !grepl('Ribosomal_RNA*', cef_annotated$description))
cef_annotated <- subset(cef_annotated, !grepl('ribosomal_RNA*', cef_annotated$description))
cef_annotated <- subset(cef_annotated, !grepl('*ribosomal_RNA*', cef_annotated$description))
clinda_annotated <- subset(clinda_annotated, !grepl('Ribosomal_RNA*', clinda_annotated$description))
clinda_annotated <- subset(clinda_annotated, !grepl('ribosomal_RNA*', clinda_annotated$description))
clinda_annotated <- subset(clinda_annotated, !grepl('*ribosomal_RNA*', clinda_annotated$description))
strep_annotated <- subset(strep_annotated, !grepl('Ribosomal_RNA*', strep_annotated$description))
strep_annotated <- subset(strep_annotated, !grepl('ribosomal_RNA*', strep_annotated$description))
strep_annotated <- subset(strep_annotated, !grepl('*ribosomal_RNA*', strep_annotated$description))
# Remove hypothetical and uncharacterized annotations
cef_annotated <- subset(cef_annotated, description != 'hypothetical_protein')
cef_annotated <- subset(cef_annotated, description != 'uncharacterized_*')
clinda_annotated <- subset(clinda_annotated, description != 'hypothetical_protein')
clinda_annotated <- subset(clinda_annotated, description != 'uncharacterized_*')
strep_annotated <- subset(strep_annotated, description != 'hypothetical_protein')
strep_annotated <- subset(strep_annotated, description != 'uncharacterized_*')
# Find annotated gene counts
cef_genes <- as.numeric(length(cef_annotated$gene))
clinda_genes <- as.numeric(length(clinda_annotated$gene))
strep_genes <- as.numeric(length(strep_annotated$gene))
# Find percent of each annotation type (genes vs organisms)
cef_gene_percent <- (cef_genes / all_cef) * 100
cef_org_percent <- (cef_orgs / all_cef) * 100
clinda_gene_percent <- (clinda_genes / all_clinda) * 100
clinda_org_percent <- (clinda_orgs / all_clinda) * 100
strep_gene_percent <- (strep_genes / all_strep) * 100
strep_org_percent <- (strep_orgs / all_strep) * 100
# Save pathway information
cef_pathways <- cef_annotated[complete.cases(cef_annotated),]
clinda_pathways <- clinda_annotated[complete.cases(clinda_annotated),]
strep_pathways <- strep_annotated[complete.cases(strep_annotated),]
# Aggregate identical genes, regardless of organism
cef_annotated <- aggregate(cbind(cef_annotated$cef_630_metaT_reads, cef_annotated$cef_mock_metaT_reads), by=list(cef_annotated$description), FUN=sum)
colnames(cef_annotated) <- c('gene', 'cef_630_reads', 'cef_mock_reads')
clinda_annotated <- aggregate(cbind(clinda_annotated$clinda_630_metaT_reads, clinda_annotated$clinda_mock_metaT_reads), by=list(clinda_annotated$description), FUN=sum)
colnames(clinda_annotated) <- c('gene', 'clinda_630_reads', 'clinda_mock_reads')
strep_annotated <- aggregate(cbind(strep_annotated$strep_630_metaT_reads, strep_annotated$strep_mock_metaT_reads), by=list(strep_annotated$description), FUN=sum)
colnames(strep_annotated) <- c('gene', 'strep_630_reads', 'strep_mock_reads')
# Aggregate pathways
cef_pathways <- aggregate(cbind(cef_pathways$cef_630_metaT_reads, cef_pathways$cef_mock_metaT_reads), by=list(cef_pathways$pathways), FUN=sum)
colnames(cef_pathways) <- c('pathway', 'cef_630_reads', 'cef_mock_reads')
clinda_pathways <- aggregate(cbind(clinda_pathways$clinda_630_metaT_reads, clinda_pathways$clinda_mock_metaT_reads), by=list(clinda_pathways$pathways), FUN=sum)
colnames(clinda_pathways) <- c('pathway', 'clinda_630_reads', 'clinda_mock_reads')
strep_pathways <- aggregate(cbind(strep_pathways$strep_630_metaT_reads, strep_pathways$strep_mock_metaT_reads), by=list(strep_pathways$pathways), FUN=sum)
colnames(strep_pathways) <- c('pathway', 'strep_630_reads', 'strep_mock_reads')
#--------------------------------------------------------------------------------------------------#
# Calculate differences between infected to mock
cef_annotated$diff <- abs(cef_annotated$cef_630_reads - cef_annotated$cef_mock_reads)
clinda_annotated$diff <- abs(clinda_annotated$clinda_630_reads - clinda_annotated$clinda_mock_reads)
strep_annotated$diff <- abs(strep_annotated$strep_630_reads - strep_annotated$strep_mock_reads)
cef_pathways$diff <- abs(cef_pathways$cef_630_reads - cef_pathways$cef_mock_reads)
clinda_pathways$diff <- abs(clinda_pathways$clinda_630_reads - clinda_pathways$clinda_mock_reads)
strep_pathways$diff <- abs(strep_pathways$strep_630_reads - strep_pathways$strep_mock_reads)
# Log transform expression
cef_annotated[,c(2:4)] <- log2(cef_annotated[,c(2:4)] + 1)
clinda_annotated[,c(2:4)] <- log2(clinda_annotated[,c(2:4)] + 1)
strep_annotated[,c(2:4)] <- log2(strep_annotated[,c(2:4)] + 1)
cef_pathways[,c(2:4)] <- log2(cef_pathways[,c(2:4)] + 1)
clinda_pathways[,c(2:4)] <- log2(clinda_pathways[,c(2:4)] + 1)
strep_pathways[,c(2:4)] <- log2(strep_pathways[,c(2:4)] + 1)
# Write supplementary table panels
table_s1a <- strep_annotated
table_s1a$diff <- NULL
write.table(table_s1a, file='results/figures/supplement/tables/Table_S1a.tsv', sep='\t', col.names=TRUE, row.names=FALSE, quote=FALSE)
table_s1b <- cef_annotated
table_s1b$diff <- NULL
write.table(table_s1b, file='results/figures/supplement/tables/Table_S1b.tsv', sep='\t', col.names=TRUE, row.names=FALSE, quote=FALSE)
table_s1c <- clinda_annotated
table_s1c$diff <- NULL
write.table(table_s1c, file='results/figures/supplement/tables/Table_S1c.tsv', sep='\t', col.names=TRUE, row.names=FALSE, quote=FALSE)
rm(table_s1a, table_s1b, table_s1c)
table_s1a <- strep_annotated
table_s1a$diff <- NULL
write.table(table_s1a, file='results/figures/supplement/tables/Table_S1a.tsv', sep='\t', row.names=FALSE, quote=FALSE)
