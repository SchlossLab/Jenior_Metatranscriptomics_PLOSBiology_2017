metabolite_annotation <- metabolome[,c(1:2)]
metabolome$SUB_PATHWAY <- NULL
metabolome$SUPER_PATHWAY <- NULL
metabolome <- as.data.frame(t(metabolome))
# Format names and add metadata
colnames(metabolome) <- gsub('_', ' ', colnames(metabolome))
substr(colnames(metabolome), 1, 1) <- toupper(substr(colnames(metabolome), 1, 1))
metabolome <- clean_merge(metadata, metabolome)
metabolome <- subset(metabolome, abx != 'germfree')
rm(metadata)
# Subset antibiotics
#noabx_metabolome <- subset(metabolome, abx == 'none')
#noabx_metabolome$abx <- NULL
cef_metabolome <- subset(metabolome, abx == 'cefoperazone')
cef_metabolome$abx <- NULL
clinda_metabolome <- subset(metabolome, abx == 'clindamycin')
clinda_metabolome$abx <- NULL
strep_metabolome <- subset(metabolome, abx == 'streptomycin')
strep_metabolome$abx <- NULL
metabolome$abx <- NULL
metabolome$infection <- NULL
rm(metabolome)
infection <- strep_metabolome$infection
strep_metabolome$infection <- NULL
strep_metabolome <- rm_lowVar(strep_metabolome)
strep_metabolome <- cbind(infection, strep_metabolome)
View(strep_metabolome)
infection <- cef_metabolome$infection
cef_metabolome$infection <- NULL
cef_metabolome <- rm_lowVar(cef_metabolome)
cef_metabolome <- cbind(infection, cef_metabolome)
infection <- clinda_metabolome$infection
clinda_metabolome$infection <- NULL
clinda_metabolome <- rm_lowVar(clinda_metabolome)
clinda_metabolome <- cbind(infection, clinda_metabolome)
cef_metabolome <- aggregate(cef_metabolome[,2:ncol(cef_metabolome)], by=list(cef_metabolome$infection), FUN=median)
# Set up environment
rm(list=ls())
gc()
# Load in functions
starting_dir <- getwd()
source('~/Desktop/Repositories/Jenior_Metatranscriptomics_2016/code/R/functions.R')
# Define files
# Metadata
metadata <- 'data/metadata.tsv'
# Sequencing
strep_metatranscriptome <- 'data/read_mapping/strep_normalized_metaT.tsv'
cef_metatranscriptome <- 'data/read_mapping/cef_normalized_metaT.tsv'
clinda_metatranscriptome <- 'data/read_mapping/clinda_normalized_metaT.tsv'
# KEGG taxonomy IDs
kegg_tax <- 'data/kegg_taxonomy.tsv'
# Metabolomes
metabolome <- 'data/metabolome/scaled_intensities.log10.tsv'
# Output plot
plot_file <- 'results/figures/figure_5.pdf'
#-------------------------------------------------------------------------------------------------------------------------#
# Read in data
# Metadata
metadata <- read.delim(metadata, sep='\t', header=T, row.names=1)
# KEGG organism file
kegg_tax <- read.delim(kegg_tax, sep='\t', header=TRUE)
kegg_tax[] <- lapply(kegg_tax, as.character)
# Normalized Metatranscriptomes
strep_metatranscriptome <- read.delim(strep_metatranscriptome, sep='\t', header=TRUE, stringsAsFactors=FALSE, row.names=7)
cef_metatranscriptome <- read.delim(cef_metatranscriptome, sep='\t', header=TRUE, stringsAsFactors=FALSE, row.names=7)
clinda_metatranscriptome <- read.delim(clinda_metatranscriptome, sep='\t', header=TRUE, stringsAsFactors=FALSE, row.names=7)
# Metabolomes
metabolome <- read.delim(metabolome, sep='\t', header=TRUE)
#-------------------------------------------------------------------------------------------------------------------------#
# Format data
# Metadata
metadata$type <- NULL
metadata$cage <- NULL
metadata$mouse <- NULL
metadata$gender <- NULL
metadata$susceptibility <- NULL
#----------------#
# Metatranscriptomes
# Remove C. difficile genes
cdiff_omit <- c('cdf','pdc','cdc','cdl','pdf')
cef_metatranscriptome <- cef_metatranscriptome[!cef_metatranscriptome$organism %in% cdiff_omit,]
clinda_metatranscriptome <- clinda_metatranscriptome[!clinda_metatranscriptome$organism %in% cdiff_omit,]
strep_metatranscriptome <- strep_metatranscriptome[!strep_metatranscriptome$organism %in% cdiff_omit,]
rm(cdiff_omit)
# Remove all possible mammalian genes
mamm_omit <- c('fab','cfa','ggo','hgl','hsa','mcc','mdo','pon','aml',
'ptr','rno','shr','ssc','aml','bta','cge','ecb',
'pps','fca','mmu','oaa','gga','ola','acs','aga')
strep_metatranscriptome <- subset(strep_metatranscriptome, !(strep_metatranscriptome$organism %in% mamm_omit))
cef_metatranscriptome <- subset(cef_metatranscriptome, !(cef_metatranscriptome$organism %in% mamm_omit))
clinda_metatranscriptome <- subset(clinda_metatranscriptome, !(clinda_metatranscriptome$organism %in% mamm_omit))
rm(mamm_omit)
# Merge with KEGG taxonomy
strep_metatranscriptome <- merge(x=strep_metatranscriptome, y=kegg_tax, by.x='organism', by.y='org_code', all.x=TRUE)
cef_metatranscriptome <- merge(x=cef_metatranscriptome, y=kegg_tax, by.x='organism', by.y='org_code', all.x=TRUE)
clinda_metatranscriptome <- merge(x=clinda_metatranscriptome, y=kegg_tax, by.x='organism', by.y='org_code', all.x=TRUE)
rm(kegg_tax)
# Remove those genes without an genus annotation
cef_metatranscriptome <- cef_metatranscriptome[!is.na(cef_metatranscriptome$genus),]
clinda_metatranscriptome <- clinda_metatranscriptome[!is.na(clinda_metatranscriptome$genus),]
strep_metatranscriptome <- strep_metatranscriptome[!is.na(strep_metatranscriptome$genus),]
# Remove unneeded columns
rownames(strep_metatranscriptome) <- strep_metatranscriptome$gene
strep_metatranscriptome$gene <- NULL
strep_metatranscriptome$organism <- NULL
strep_metatranscriptome$description <- NULL
strep_metatranscriptome$ko <- NULL
strep_metatranscriptome$pathways <- NULL
strep_metatranscriptome$domain <- NULL
strep_metatranscriptome$group <- NULL
strep_metatranscriptome$species <- NULL
rownames(cef_metatranscriptome) <- cef_metatranscriptome$gene
cef_metatranscriptome$gene <- NULL
cef_metatranscriptome$organism <- NULL
cef_metatranscriptome$description <- NULL
cef_metatranscriptome$ko <- NULL
cef_metatranscriptome$pathways <- NULL
cef_metatranscriptome$domain <- NULL
cef_metatranscriptome$group <- NULL
cef_metatranscriptome$species <- NULL
rownames(clinda_metatranscriptome) <- clinda_metatranscriptome$gene
clinda_metatranscriptome$gene <- NULL
clinda_metatranscriptome$organism <- NULL
clinda_metatranscriptome$description <- NULL
clinda_metatranscriptome$ko <- NULL
clinda_metatranscriptome$pathways <- NULL
clinda_metatranscriptome$domain <- NULL
clinda_metatranscriptome$group <- NULL
clinda_metatranscriptome$species <- NULL
# Calculate differences between mock and infected metatranscriptomes
cef_metatranscriptome$delta <- (cef_metatranscriptome$cef_mock_metaT_reads - cef_metatranscriptome$cef_630_metaT_reads) * -1
clinda_metatranscriptome$delta <- (clinda_metatranscriptome$clinda_mock_metaT_reads - clinda_metatranscriptome$clinda_630_metaT_reads) * -1
strep_metatranscriptome$delta <- (strep_metatranscriptome$strep_mock_metaT_reads - strep_metatranscriptome$strep_630_metaT_reads) * -1
# Filter out genes with very little change
cef_metatranscriptome <- subset(cef_metatranscriptome, delta < -10 | delta > 10)
clinda_metatranscriptome <- subset(clinda_metatranscriptome, delta < -10 | delta > 10)
strep_metatranscriptome <- subset(strep_metatranscriptome, delta < -10 | delta > 10)
#----------------#
# Metabolomes
metabolome$PUBCHEM <- NULL
metabolome$BIOCHEMICAL <- gsub('_', ' ', metabolome$BIOCHEMICAL)
substr(metabolome$BIOCHEMICAL, 1, 1) <- toupper(substr(metabolome$BIOCHEMICAL, 1, 1))
rownames(metabolome) <- metabolome$BIOCHEMICAL
metabolome$BIOCHEMICAL <- NULL
metabolome$KEGG <- NULL
metabolite_annotation <- metabolome[,c(1:2)]
metabolome$SUB_PATHWAY <- NULL
metabolome$SUPER_PATHWAY <- NULL
metabolome <- as.data.frame(t(metabolome))
# Format names and add metadata
colnames(metabolome) <- gsub('_', ' ', colnames(metabolome))
substr(colnames(metabolome), 1, 1) <- toupper(substr(colnames(metabolome), 1, 1))
metabolome <- clean_merge(metadata, metabolome)
metabolome <- subset(metabolome, abx != 'germfree')
rm(metadata)
# Subset antibiotics
#noabx_metabolome <- subset(metabolome, abx == 'none')
#noabx_metabolome$abx <- NULL
cef_metabolome <- subset(metabolome, abx == 'cefoperazone')
cef_metabolome$abx <- NULL
clinda_metabolome <- subset(metabolome, abx == 'clindamycin')
clinda_metabolome$abx <- NULL
strep_metabolome <- subset(metabolome, abx == 'streptomycin')
strep_metabolome$abx <- NULL
metabolome$abx <- NULL
metabolome$infection <- NULL
rm(metabolome)
# Remove metabolites with low variance
infection <- strep_metabolome$infection
strep_metabolome$infection <- NULL
strep_metabolome <- rm_lowVar(strep_metabolome)
strep_metabolome <- cbind(infection, strep_metabolome)
infection <- cef_metabolome$infection
cef_metabolome$infection <- NULL
cef_metabolome <- rm_lowVar(cef_metabolome)
cef_metabolome <- cbind(infection, cef_metabolome)
infection <- clinda_metabolome$infection
clinda_metabolome$infection <- NULL
clinda_metabolome <- rm_lowVar(clinda_metabolome)
clinda_metabolome <- cbind(infection, clinda_metabolome)
# Find medians within antibiotic groups
#noabx_metabolome <- aggregate(noabx_metabolome[,2:ncol(noabx_metabolome)], by=list(noabx_metabolome$infection), FUN=median)
#rownames(noabx_metabolome) <- noabx_metabolome$Group.1
#noabx_metabolome$Group.1 <- NULL
#noabx_metabolome <- t(noabx_metabolome)
cef_metabolome <- aggregate(cef_metabolome[,2:ncol(cef_metabolome)], by=list(cef_metabolome$infection), FUN=median)
rownames(cef_metabolome) <- c('Cefoperzone_Infected','Cefoperzone_Mock')
cef_metabolome$Group.1 <- NULL
cef_metabolome<- t(cef_metabolome)
clinda_metabolome <- aggregate(clinda_metabolome[,2:ncol(clinda_metabolome)], by=list(clinda_metabolome$infection), FUN=median)
rownames(clinda_metabolome) <- c('Clindamycin_Infected','Clindamycin_Mock')
clinda_metabolome$Group.1 <- NULL
clinda_metabolome <- t(clinda_metabolome)
strep_metabolome <- aggregate(strep_metabolome[,2:ncol(strep_metabolome)], by=list(strep_metabolome$infection), FUN=median)
rownames(strep_metabolome) <- c('Streptomycin_Infected','Streptomycin_Mock')
strep_metabolome$Group.1 <- NULL
strep_metabolome <- t(strep_metabolome)
# Calculate delta between infected and mock
cef_metabolome <- as.data.frame(10 ^ cef_metabolome)
cef_metabolome$delta <- (cef_metabolome$Cefoperzone_Mock - cef_metabolome$Cefoperzone_Infected) * -1
clinda_metabolome <- as.data.frame(10 ^ clinda_metabolome)
clinda_metabolome$delta <- (clinda_metabolome$Clindamycin_Mock - clinda_metabolome$Clindamycin_Infected) * -1
strep_metabolome <- as.data.frame(10 ^ strep_metabolome)
strep_metabolome$delta <- (strep_metabolome$Streptomycin_Mock - strep_metabolome$Streptomycin_Infected) * -1
# Add back pathway annotations
strep_metabolome <- merge(strep_metabolome, metabolite_annotation, by='row.names', all.x=TRUE)
strep_metabolome <- strep_metabolome[order(strep_metabolome$Row.names),]
rownames(strep_metabolome) <- strep_metabolome$Row.names
strep_metabolome$Row.names <- NULL
strep_metabolome$SUB_PATHWAY <- NULL
cef_metabolome <- merge(cef_metabolome, metabolite_annotation, by='row.names', all.x=TRUE)
cef_metabolome <- cef_metabolome[order(cef_metabolome$Row.names),]
rownames(cef_metabolome) <- cef_metabolome$Row.names
cef_metabolome$Row.names <- NULL
cef_metabolome$SUB_PATHWAY <- NULL
clinda_metabolome <- merge(clinda_metabolome, metabolite_annotation, by='row.names', all.x=TRUE)
clinda_metabolome <- clinda_metabolome[order(clinda_metabolome$Row.names),]
rownames(clinda_metabolome) <- clinda_metabolome$Row.names
clinda_metabolome$Row.names <- NULL
clinda_metabolome$SUB_PATHWAY <- NULL
rm(metabolite_annotation)
#----------------#
# Create named vectors for each delta dataset
# Metatranscriptomes
strep_metatranscriptome_cdi <- strep_metatranscriptome$strep_630_metaT_reads
names(strep_metatranscriptome_cdi) <- strep_metatranscriptome
strep_metatranscriptome_mock <- strep_metatranscriptome$strep_mock_metaT_reads
names(strep_metatranscriptome_mock) <- strep_metatranscriptome$genus
rm(strep_metatranscriptome)
cef_metatranscriptome_cdi <- cef_metatranscriptome$cef_630_metaT_reads
names(cef_metatranscriptome_cdi) <- cef_metatranscriptome$genus
cef_metatranscriptome_mock <- cef_metatranscriptome$cef_mock_metaT_reads
names(cef_metatranscriptome_mock) <- cef_metatranscriptome$genus
rm(cef_metatranscriptome)
clinda_metatranscriptome_cdi <- clinda_metatranscriptome$clinda_630_metaT_reads
names(clinda_metatranscriptome_cdi) <- clinda_metatranscriptome$genus
clinda_metatranscriptome_mock <- clinda_metatranscriptome$clinda_mock_metaT_reads
names(clinda_metatranscriptome_mock) <- clinda_metatranscriptome$genus
rm(clinda_metatranscriptome)
# Metabolomes
strep_metabolome_cdi <- strep_metabolome$Streptomycin_Infected
names(strep_metabolome_cdi) <- strep_metabolome$SUPER_PATHWAY
strep_metabolome_mock <- strep_metabolome$Streptomycin_Mock
names(strep_metabolome_mock) <- strep_metabolome$SUPER_PATHWAY
rm(strep_metabolome)
cef_metabolome_cdi <- cef_metabolome$Cefoperzone_Infected
names(cef_metabolome_cdi) <- cef_metabolome$SUPER_PATHWAY
cef_metabolome_mock <- cef_metabolome$Cefoperzone_Mock
names(cef_metabolome_mock) <- cef_metabolome$SUPER_PATHWAY
rm(cef_metabolome)
clinda_metabolome_cdi <- clinda_metabolome$Clindamycin_Infected
names(clinda_metabolome_cdi) <- clinda_metabolome$SUPER_PATHWAY
clinda_metabolome_mock <- clinda_metabolome$Clindamycin_Mock
names(clinda_metabolome_mock) <- clinda_metabolome$SUPER_PATHWAY
rm(clinda_metabolome)
test1 <- c()
test2 <- c()
for (i in 1:length(strep_metatranscriptome_cdi)){
test1[i] <- strep_metatranscriptome_cdi[i]
test2[i] <- strep_metabolome_cdi[1]
}
test <- cor(x=test1, y=test2, method='spearman')
# Set up environment
rm(list=ls())
gc()
# Load in functions
starting_dir <- getwd()
source('~/Desktop/Repositories/Jenior_Metatranscriptomics_2016/code/R/functions.R')
# Define files
# Metadata
metadata <- 'data/metadata.tsv'
# Sequencing
strep_metatranscriptome <- 'data/read_mapping/strep_normalized_metaT.tsv'
cef_metatranscriptome <- 'data/read_mapping/cef_normalized_metaT.tsv'
clinda_metatranscriptome <- 'data/read_mapping/clinda_normalized_metaT.tsv'
# KEGG taxonomy IDs
kegg_tax <- 'data/kegg_taxonomy.tsv'
# Metabolomes
metabolome <- 'data/metabolome/scaled_intensities.log10.tsv'
# Output plot
plot_file <- 'results/figures/figure_5.pdf'
#-------------------------------------------------------------------------------------------------------------------------#
# Read in data
# Metadata
metadata <- read.delim(metadata, sep='\t', header=T, row.names=1)
# KEGG organism file
kegg_tax <- read.delim(kegg_tax, sep='\t', header=TRUE)
kegg_tax[] <- lapply(kegg_tax, as.character)
# Normalized Metatranscriptomes
strep_metatranscriptome <- read.delim(strep_metatranscriptome, sep='\t', header=TRUE, stringsAsFactors=FALSE, row.names=7)
cef_metatranscriptome <- read.delim(cef_metatranscriptome, sep='\t', header=TRUE, stringsAsFactors=FALSE, row.names=7)
clinda_metatranscriptome <- read.delim(clinda_metatranscriptome, sep='\t', header=TRUE, stringsAsFactors=FALSE, row.names=7)
View(cef_metatranscriptome)
# Set up environment
rm(list=ls())
gc()
# Load in functions
starting_dir <- getwd()
source('~/Desktop/Repositories/Jenior_Metatranscriptomics_2016/code/R/functions.R')
# Define files
# Metadata
metadata <- 'data/metadata.tsv'
# Sequencing
strep_metatranscriptome <- 'data/read_mapping/strep_normalized_metaT.tsv'
cef_metatranscriptome <- 'data/read_mapping/cef_normalized_metaT.tsv'
clinda_metatranscriptome <- 'data/read_mapping/clinda_normalized_metaT.tsv'
# KEGG taxonomy IDs
kegg_tax <- 'data/kegg_taxonomy.tsv'
# Metabolomes
metabolome <- 'data/metabolome/scaled_intensities.log10.tsv'
# Output plot
plot_file <- 'results/figures/figure_5.pdf'
#-------------------------------------------------------------------------------------------------------------------------#
# Read in data
# Metadata
metadata <- read.delim(metadata, sep='\t', header=T, row.names=1)
# KEGG organism file
kegg_tax <- read.delim(kegg_tax, sep='\t', header=TRUE)
kegg_tax[] <- lapply(kegg_tax, as.character)
# Normalized Metatranscriptomes
strep_metatranscriptome <- read.delim(strep_metatranscriptome, sep='\t', header=TRUE, stringsAsFactors=FALSE, row.names=7)
cef_metatranscriptome <- read.delim(cef_metatranscriptome, sep='\t', header=TRUE, stringsAsFactors=FALSE, row.names=7)
clinda_metatranscriptome <- read.delim(clinda_metatranscriptome, sep='\t', header=TRUE, stringsAsFactors=FALSE, row.names=7)
# Metabolomes
metabolome <- read.delim(metabolome, sep='\t', header=TRUE)
#-------------------------------------------------------------------------------------------------------------------------#
# Format data
# Metadata
metadata$type <- NULL
metadata$cage <- NULL
metadata$mouse <- NULL
metadata$gender <- NULL
metadata$susceptibility <- NULL
#----------------#
# Metatranscriptomes
# Remove C. difficile genes
cdiff_omit <- c('cdf','pdc','cdc','cdl','pdf')
cef_metatranscriptome <- cef_metatranscriptome[!cef_metatranscriptome$organism %in% cdiff_omit,]
clinda_metatranscriptome <- clinda_metatranscriptome[!clinda_metatranscriptome$organism %in% cdiff_omit,]
strep_metatranscriptome <- strep_metatranscriptome[!strep_metatranscriptome$organism %in% cdiff_omit,]
rm(cdiff_omit)
# Remove all possible mammalian genes
mamm_omit <- c('fab','cfa','ggo','hgl','hsa','mcc','mdo','pon','aml',
'ptr','rno','shr','ssc','aml','bta','cge','ecb',
'pps','fca','mmu','oaa','gga','ola','acs','aga')
strep_metatranscriptome <- subset(strep_metatranscriptome, !(strep_metatranscriptome$organism %in% mamm_omit))
cef_metatranscriptome <- subset(cef_metatranscriptome, !(cef_metatranscriptome$organism %in% mamm_omit))
clinda_metatranscriptome <- subset(clinda_metatranscriptome, !(clinda_metatranscriptome$organism %in% mamm_omit))
rm(mamm_omit)
# Merge with KEGG taxonomy
strep_metatranscriptome <- merge(x=strep_metatranscriptome, y=kegg_tax, by.x='organism', by.y='org_code', all.x=TRUE)
cef_metatranscriptome <- merge(x=cef_metatranscriptome, y=kegg_tax, by.x='organism', by.y='org_code', all.x=TRUE)
clinda_metatranscriptome <- merge(x=clinda_metatranscriptome, y=kegg_tax, by.x='organism', by.y='org_code', all.x=TRUE)
rm(kegg_tax)
# Remove those genes without an genus annotation
cef_metatranscriptome <- cef_metatranscriptome[!is.na(cef_metatranscriptome$genus),]
clinda_metatranscriptome <- clinda_metatranscriptome[!is.na(clinda_metatranscriptome$genus),]
strep_metatranscriptome <- strep_metatranscriptome[!is.na(strep_metatranscriptome$genus),]
# Remove unneeded columns
rownames(strep_metatranscriptome) <- strep_metatranscriptome$gene
strep_metatranscriptome$gene <- NULL
strep_metatranscriptome$organism <- NULL
strep_metatranscriptome$description <- NULL
strep_metatranscriptome$ko <- NULL
strep_metatranscriptome$pathways <- NULL
strep_metatranscriptome$domain <- NULL
strep_metatranscriptome$group <- NULL
strep_metatranscriptome$species <- NULL
rownames(cef_metatranscriptome) <- cef_metatranscriptome$gene
cef_metatranscriptome$gene <- NULL
cef_metatranscriptome$organism <- NULL
cef_metatranscriptome$description <- NULL
cef_metatranscriptome$ko <- NULL
cef_metatranscriptome$pathways <- NULL
cef_metatranscriptome$domain <- NULL
cef_metatranscriptome$group <- NULL
cef_metatranscriptome$species <- NULL
rownames(clinda_metatranscriptome) <- clinda_metatranscriptome$gene
clinda_metatranscriptome$gene <- NULL
clinda_metatranscriptome$organism <- NULL
clinda_metatranscriptome$description <- NULL
clinda_metatranscriptome$ko <- NULL
clinda_metatranscriptome$pathways <- NULL
clinda_metatranscriptome$domain <- NULL
clinda_metatranscriptome$group <- NULL
clinda_metatranscriptome$species <- NULL
# Calculate differences between mock and infected metatranscriptomes
cef_metatranscriptome$delta <- log10(cef_metatranscriptome$cef_mock_metaT_reads / cef_metatranscriptome$cef_630_metaT_reads) * -1
clinda_metatranscriptome$delta <- log10(clinda_metatranscriptome$clinda_mock_metaT_reads / clinda_metatranscriptome$clinda_630_metaT_reads) * -1
strep_metatranscriptome$delta <- log10(strep_metatranscriptome$strep_mock_metaT_reads / strep_metatranscriptome$strep_630_metaT_reads) * -1
# Filter out genes with very little change
cef_metatranscriptome <- subset(cef_metatranscriptome, delta < as.vector(quantile(delta))[2] | as.vector(quantile(delta))[4] > 10)
clinda_metatranscriptome <- subset(clinda_metatranscriptome, as.vector(quantile(delta))[2] < -10 | as.vector(quantile(delta))[4] > 10)
strep_metatranscriptome <- subset(strep_metatranscriptome, as.vector(quantile(delta))[2] < -10 | as.vector(quantile(delta))[4] > 10)
#----------------#
# Metabolomes
metabolome$PUBCHEM <- NULL
metabolome$BIOCHEMICAL <- gsub('_', ' ', metabolome$BIOCHEMICAL)
substr(metabolome$BIOCHEMICAL, 1, 1) <- toupper(substr(metabolome$BIOCHEMICAL, 1, 1))
rownames(metabolome) <- metabolome$BIOCHEMICAL
metabolome$BIOCHEMICAL <- NULL
metabolome$KEGG <- NULL
metabolite_annotation <- metabolome[,c(1:2)]
metabolome$SUB_PATHWAY <- NULL
metabolome$SUPER_PATHWAY <- NULL
metabolome <- as.data.frame(t(metabolome))
# Format names and add metadata
colnames(metabolome) <- gsub('_', ' ', colnames(metabolome))
substr(colnames(metabolome), 1, 1) <- toupper(substr(colnames(metabolome), 1, 1))
metabolome <- clean_merge(metadata, metabolome)
metabolome <- subset(metabolome, abx != 'germfree')
rm(metadata)
# Subset antibiotics
#noabx_metabolome <- subset(metabolome, abx == 'none')
#noabx_metabolome$abx <- NULL
cef_metabolome <- subset(metabolome, abx == 'cefoperazone')
cef_metabolome$abx <- NULL
clinda_metabolome <- subset(metabolome, abx == 'clindamycin')
clinda_metabolome$abx <- NULL
strep_metabolome <- subset(metabolome, abx == 'streptomycin')
strep_metabolome$abx <- NULL
metabolome$abx <- NULL
metabolome$infection <- NULL
rm(metabolome)
# Remove metabolites with low variance
infection <- strep_metabolome$infection
strep_metabolome$infection <- NULL
strep_metabolome <- rm_lowVar(strep_metabolome)
strep_metabolome <- cbind(infection, strep_metabolome)
infection <- cef_metabolome$infection
cef_metabolome$infection <- NULL
cef_metabolome <- rm_lowVar(cef_metabolome)
cef_metabolome <- cbind(infection, cef_metabolome)
infection <- clinda_metabolome$infection
clinda_metabolome$infection <- NULL
clinda_metabolome <- rm_lowVar(clinda_metabolome)
clinda_metabolome <- cbind(infection, clinda_metabolome)
# Find medians within antibiotic groups
#noabx_metabolome <- aggregate(noabx_metabolome[,2:ncol(noabx_metabolome)], by=list(noabx_metabolome$infection), FUN=median)
#rownames(noabx_metabolome) <- noabx_metabolome$Group.1
#noabx_metabolome$Group.1 <- NULL
#noabx_metabolome <- t(noabx_metabolome)
cef_metabolome <- aggregate(cef_metabolome[,2:ncol(cef_metabolome)], by=list(cef_metabolome$infection), FUN=median)
rownames(cef_metabolome) <- c('Cefoperzone_Infected','Cefoperzone_Mock')
cef_metabolome$Group.1 <- NULL
cef_metabolome<- t(cef_metabolome)
clinda_metabolome <- aggregate(clinda_metabolome[,2:ncol(clinda_metabolome)], by=list(clinda_metabolome$infection), FUN=median)
rownames(clinda_metabolome) <- c('Clindamycin_Infected','Clindamycin_Mock')
clinda_metabolome$Group.1 <- NULL
clinda_metabolome <- t(clinda_metabolome)
strep_metabolome <- aggregate(strep_metabolome[,2:ncol(strep_metabolome)], by=list(strep_metabolome$infection), FUN=median)
rownames(strep_metabolome) <- c('Streptomycin_Infected','Streptomycin_Mock')
strep_metabolome$Group.1 <- NULL
strep_metabolome <- t(strep_metabolome)
# Calculate delta between infected and mock
cef_metabolome <- as.data.frame(10 ^ cef_metabolome)
cef_metabolome$delta <- log10(cef_metabolome$Cefoperzone_Mock / cef_metabolome$Cefoperzone_Infected) * -1
clinda_metabolome <- as.data.frame(10 ^ clinda_metabolome)
clinda_metabolome$delta <- log10(clinda_metabolome$Clindamycin_Mock / clinda_metabolome$Clindamycin_Infected) * -1
strep_metabolome <- as.data.frame(10 ^ strep_metabolome)
strep_metabolome$delta <- log10(strep_metabolome$Streptomycin_Mock / strep_metabolome$Streptomycin_Infected) * -1
# Add back pathway annotations
strep_metabolome <- merge(strep_metabolome, metabolite_annotation, by='row.names', all.x=TRUE)
strep_metabolome <- strep_metabolome[order(strep_metabolome$Row.names),]
rownames(strep_metabolome) <- strep_metabolome$Row.names
strep_metabolome$Row.names <- NULL
strep_metabolome$SUB_PATHWAY <- NULL
cef_metabolome <- merge(cef_metabolome, metabolite_annotation, by='row.names', all.x=TRUE)
cef_metabolome <- cef_metabolome[order(cef_metabolome$Row.names),]
rownames(cef_metabolome) <- cef_metabolome$Row.names
cef_metabolome$Row.names <- NULL
cef_metabolome$SUB_PATHWAY <- NULL
clinda_metabolome <- merge(clinda_metabolome, metabolite_annotation, by='row.names', all.x=TRUE)
clinda_metabolome <- clinda_metabolome[order(clinda_metabolome$Row.names),]
rownames(clinda_metabolome) <- clinda_metabolome$Row.names
clinda_metabolome$Row.names <- NULL
clinda_metabolome$SUB_PATHWAY <- NULL
rm(metabolite_annotation)
#----------------#
# Create named vectors for each delta dataset
# Metatranscriptomes
strep_metatranscriptome_cdi <- strep_metatranscriptome$strep_630_metaT_reads
names(strep_metatranscriptome_cdi) <- strep_metatranscriptome
strep_metatranscriptome_mock <- strep_metatranscriptome$strep_mock_metaT_reads
names(strep_metatranscriptome_mock) <- strep_metatranscriptome$genus
rm(strep_metatranscriptome)
cef_metatranscriptome_cdi <- cef_metatranscriptome$cef_630_metaT_reads
names(cef_metatranscriptome_cdi) <- cef_metatranscriptome$genus
cef_metatranscriptome_mock <- cef_metatranscriptome$cef_mock_metaT_reads
names(cef_metatranscriptome_mock) <- cef_metatranscriptome$genus
rm(cef_metatranscriptome)
clinda_metatranscriptome_cdi <- clinda_metatranscriptome$clinda_630_metaT_reads
names(clinda_metatranscriptome_cdi) <- clinda_metatranscriptome$genus
clinda_metatranscriptome_mock <- clinda_metatranscriptome$clinda_mock_metaT_reads
names(clinda_metatranscriptome_mock) <- clinda_metatranscriptome$genus
rm(clinda_metatranscriptome)
# Metabolomes
strep_metabolome_cdi <- strep_metabolome$Streptomycin_Infected
names(strep_metabolome_cdi) <- strep_metabolome$SUPER_PATHWAY
strep_metabolome_mock <- strep_metabolome$Streptomycin_Mock
names(strep_metabolome_mock) <- strep_metabolome$SUPER_PATHWAY
rm(strep_metabolome)
cef_metabolome_cdi <- cef_metabolome$Cefoperzone_Infected
names(cef_metabolome_cdi) <- cef_metabolome$SUPER_PATHWAY
cef_metabolome_mock <- cef_metabolome$Cefoperzone_Mock
names(cef_metabolome_mock) <- cef_metabolome$SUPER_PATHWAY
rm(cef_metabolome)
clinda_metabolome_cdi <- clinda_metabolome$Clindamycin_Infected
names(clinda_metabolome_cdi) <- clinda_metabolome$SUPER_PATHWAY
clinda_metabolome_mock <- clinda_metabolome$Clindamycin_Mock
names(clinda_metabolome_mock) <- clinda_metabolome$SUPER_PATHWAY
rm(clinda_metabolome)
