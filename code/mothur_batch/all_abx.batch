make.contigs(file=all_treatments.files, processors=16)
summary.seqs(fasta=all_treatments.trim.contigs.fasta)
screen.seqs(fasta=all_treatments.trim.contigs.fasta, group=all_treatments.contigs.groups, maxambig=0, maxlength=275, processors=16)
summary.seqs()
unique.seqs(fasta=current)
count.seqs(name=current, group=current)
summary.seqs(fasta=current, count=current)
align.seqs(fasta=current, reference=silva.bacteria.v4.fasta)
summary.seqs(fasta=current, count=current)
screen.seqs(fasta=current, count=current, summary=current, start=1968, end=11550, maxhomop=8)
summary.seqs(fasta=current, count=current)
filter.seqs(fasta=current, vertical=T, trump=.)
unique.seqs(fasta=current, count=current)
pre.cluster(fasta=current, count=current, diffs=2)
summary.seqs(fasta=current,count=current)
chimera.uchime(fasta=current, count=current, dereplicate=T)
remove.seqs(fasta=current, accnos=current)
summary.seqs(fasta=current, count=current)
classify.seqs(fasta=current, count=current, reference=trainset10_082014.rdp.fasta, taxonomy=trainset10_082014.rdp.tax, cutoff=80)
remove.lineage(fasta=current, count=current, taxonomy=current, taxon=Chloroplast-Mitochondria-unknown-Archaea-Eukaryota)
get.groups(count=current, fasta=current, groups=Mock1-Mock2)
seq.error(fasta=current, count=current, reference=HMP_MOCK.fasta, aligned=F)
dist.seqs(fasta=current, cutoff=0.20)
cluster(column=current, count=current)
make.shared(list=current, count=current, label=0.03)
rarefaction.single(shared=current)
remove.groups(count=all_treatments.trim.contigs.good.unique.good.filter.unique.precluster.denovo.uchime.pick.pick.count_table, fasta=all_treatments.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta, taxonomy=all_treatments.trim.contigs.good.unique.good.filter.unique.precluster.pick.rdp.wang.pick.taxonomy, groups=Mock1-Mock2)
remove.seqs(fasta=current, accnos=Cdifficile630.accnos)
cluster.split(fasta=current, count=current, taxonomy=current, splitmethod=classify, taxlevel=4, cutoff=0.15)
make.shared(list=current, count=current, label=0.03)
classify.otu(list=current, count=current, taxonomy=current, label=0.03)
