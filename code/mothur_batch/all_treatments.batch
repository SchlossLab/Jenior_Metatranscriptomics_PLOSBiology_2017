make.contigs(file=all_treatments.files, processors=16)
summary.seqs(fasta=all_treatments.trim.contigs.fasta)
screen.seqs(fasta=all_treatments.trim.contigs.fasta, group=all_treatments.contigs.groups, maxambig=0, maxlength=275, processors=16)
summary.seqs()
unique.seqs(fasta=current)
count.seqs(name=current, group=current)
summary.seqs(fasta=current, count=current)
align.seqs(fasta=current, reference=silva.bacteria.v4.fasta)
summary.seqs(fasta=current, count=current)
screen.seqs(fasta=current, count=current, summary=current, start=1968, end=11550, maxhomop=8)
summary.seqs(fasta=current, count=current)
filter.seqs(fasta=current, vertical=T, trump=.)
unique.seqs(fasta=current, count=current)
pre.cluster(fasta=current, count=current, diffs=2)
summary.seqs(fasta=current,count=current)
chimera.uchime(fasta=current, count=current, dereplicate=T)
remove.seqs(fasta=current, accnos=current)
summary.seqs(fasta=current, count=current)
classify.seqs(fasta=current, count=current, reference=trainset10_082014.rdp.fasta, taxonomy=trainset10_082014.rdp.tax, cutoff=80)
remove.lineage(fasta=current, count=current, taxonomy=current, taxon=Chloroplast-Mitochondria-unknown-Archaea-Eukaryota)
summary.tax(taxonomy=current, count=current)

get.groups(count=current, fasta=current, groups=Mock1-Mock2)
seq.error(fasta=current, count=current, reference=HMP_MOCK.fasta, aligned=F)
dist.seqs(fasta=current, cutoff=0.20)
cluster(column=current, count=current)
make.shared(list=current, count=current, label=0.03)
rarefaction.single(shared=current)

remove.groups(count=all_treatments.trim.contigs.good.unique.good.filter.unique.precluster.denovo.uchime.pick.pick.count_table, fasta=all_treatments.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta, taxonomy=all_treatments.trim.contigs.good.unique.good.filter.unique.precluster.pick.rdp.wang.pick.taxonomy, groups=Mock1-Mock2)
remove.seqs(fasta=current, accnos=Cdifficile630.accnos)
cluster.split(fasta=current, count=current, taxonomy=current, splitmethod=classify, taxlevel=4, cutoff=0.15)
make.shared(list=current, count=current, label=0.03)
classify.otu(list=current, count=current, taxonomy=current, label=0.03)
system(mv all_treatments.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.an.unique_list.0.03.cons.taxonomy all_treatments.0.03.cons.taxonomy)
system(mv all_treatments.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.an.unique_list.shared all_treatments.0.03.unique_list.shared)
summary.single(shared=all_treatments.0.03.unique_list.shared, calc=sobs-shannon-invsimpson)
count.groups(shared=all_treatments.0.03.unique_list.shared)
dist.shared(shared=current, calc=thetayc-jclass, subsample=2500)
get.oturep(phylip=all_treatments.0.03.unique_list.thetayc.0.03.lt.ave.dist, list=current, fasta=current)
nmds(phylip=all_treatments.0.03.unique_list.thetayc.0.03.lt.ave.dist)
amova(phylip=all_treatments.0.03.unique_list.thetayc.0.03.lt.ave.dist, design=all_treatments.design)
filter.shared(shared=all_treatments.0.03.unique_list.shared, minnumsamples=3)
count.groups(shared=current)
sub.sample(shared=current, size=2700)

get.groups(shared=all_treatments.0.03.unique_list.0.03.filter.0.03.subsample.shared, groups=CefC1M1-CefC1M2-CefC1M3-CefC2M1-CefC2M2-CefC2M3-CefC3M1-CefC3M2-CefC3M3-CefC4M1-CefC4M2-CefC4M3-CefC5M1-CefC5M2-CefC5M3-CefC6M1-CefC6M2-CefC6M3)
system(mv all_treatments.0.03.unique_list.0.03.filter.0.03.subsample.0.03.pick.shared all_treatments.0.03.unique_list.0.03.filter.subsample.cefoperazone.shared)
lefse(shared=all_treatments.0.03.unique_list.0.03.filter.subsample.cefoperazone.shared, design=cefoperazone.design)
get.groups(shared=all_treatments.0.03.unique_list.0.03.filter.0.03.subsample.shared, groups=ClindaC1M1-ClindaC1M2-ClindaC1M3-ClindaC2M1-ClindaC2M2-ClindaC2M3-ClindaC3M1-ClindaC3M2-ClindaC3M3-ClindaC4M1-ClindaC4M2-ClindaC4M3-ClindaC5M1-ClindaC5M2-ClindaC5M3-ClindaC6M1-ClindaC6M2-ClindaC6M3)
system(mv all_treatments.0.03.unique_list.0.03.filter.0.03.subsample.0.03.pick.shared all_treatments.0.03.unique_list.0.03.filter.subsample.clindamycin.shared)
lefse(shared=all_treatments.0.03.unique_list.0.03.filter.subsample.clindamycin.shared, design=clindamycin.design)
get.groups(shared=all_treatments.0.03.unique_list.0.03.filter.0.03.subsample.shared, groups=StrepC1M1-StrepC1M2-StrepC1M3-StrepC2M1-StrepC2M2-StrepC2M3-StrepC3M1-StrepC3M2-StrepC3M3-StrepC4M1-StrepC4M2-StrepC4M3-StrepC5M1-StrepC5M2-StrepC5M3-StrepC6M1-StrepC6M2-StrepC6M3)
system(mv all_treatments.0.03.unique_list.0.03.filter.0.03.subsample.0.03.pick.shared all_treatments.0.03.unique_list.0.03.filter.subsample.streptomycin.shared)
lefse(shared=all_treatments.0.03.unique_list.0.03.filter.subsample.streptomycin.shared, design=streptomycin.design)

phylotype(taxonomy=all_treatments.trim.contigs.good.unique.good.filter.unique.precluster.pick.rdp.wang.pick.pick.taxonomy)
make.shared(list=all_treatments.trim.contigs.good.unique.good.filter.unique.precluster.pick.rdp.wang.pick.pick.tx.list, count=all_treatments.trim.contigs.good.unique.good.filter.unique.precluster.denovo.uchime.pick.pick.pick.count_table, label=1-2-3-4-5)
classify.otu(list=current, count=current, taxonomy=current, label=1-2-3-4-5)
count.groups(shared=current)
sub.sample(shared=current, size=2600)
system(mv all_treatments.trim.contigs.good.unique.good.filter.unique.precluster.pick.rdp.wang.pick.pick.tx.1.cons.taxonomy all_treatments.genus.cons.taxonomy)
system(mv all_treatments.trim.contigs.good.unique.good.filter.unique.precluster.pick.rdp.wang.pick.pick.tx.2.cons.taxonomy all_treatments.family.cons.taxonomy)
system(mv all_treatments.trim.contigs.good.unique.good.filter.unique.precluster.pick.rdp.wang.pick.pick.tx.3.cons.taxonomy all_treatments.order.cons.taxonomy)
system(mv all_treatments.trim.contigs.good.unique.good.filter.unique.precluster.pick.rdp.wang.pick.pick.tx.4.cons.taxonomy all_treatments.class.cons.taxonomy)
system(mv all_treatments.trim.contigs.good.unique.good.filter.unique.precluster.pick.rdp.wang.pick.pick.tx.5.cons.taxonomy all_treatments.phylum.cons.taxonomy)
system(mv all_treatments.trim.contigs.good.unique.good.filter.unique.precluster.pick.rdp.wang.pick.pick.tx.1.subsample.shared all_treatments.genus.subsample.shared)
system(mv all_treatments.trim.contigs.good.unique.good.filter.unique.precluster.pick.rdp.wang.pick.pick.tx.2.subsample.shared all_treatments.family.subsample.shared)
system(mv all_treatments.trim.contigs.good.unique.good.filter.unique.precluster.pick.rdp.wang.pick.pick.tx.3.subsample.shared all_treatments.order.subsample.shared)
system(mv all_treatments.trim.contigs.good.unique.good.filter.unique.precluster.pick.rdp.wang.pick.pick.tx.4.subsample.shared all_treatments.class.subsample.shared)
system(mv all_treatments.trim.contigs.good.unique.good.filter.unique.precluster.pick.rdp.wang.pick.pick.tx.5.subsample.shared all_treatments.phylum.subsample.shared)